<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | 唐巧的技术博客]]></title>
  <link href="http://blog.devtang.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://blog.devtang.com/"/>
  <updated>2014-10-12T22:09:58+08:00</updated>
  <id>http://blog.devtang.com/</id>
  <author>
    <name><![CDATA[唐巧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第27期]]></title>
    <link href="http://blog.devtang.com/blog/2014/10/12/ios-weekly-27/"/>
    <updated>2014-10-12T16:33:21+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/10/12/ios-weekly-27</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：国内iOS6比例已经低于5%，Apple 发布 Swift 语言和 Xcode 入门视频，Facebook&rsquo;s iOS Infrastructure等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://weibo.com/1708947107/BoBnZ1qy9?mod=weibotime#_rnd1412427404394">《国内iOS6比例已经低于5%》</a>：来自国内友盟的统计以及笔者开发的应用（猿题库）统计结果都显示，国内的iOS6用户比例已经低于5%。</p></li>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-09-27/10059651916.shtml">《苹果关闭iOS 7.1.2验证：iOS 8将无法降级》</a>：在发布iOS 8的两个更新之后，苹果停止了为iOS 7.1.2固件提供签名。这意味着，已经升级至新版iOS 8的用户将无法再降级回iOS 7.1.2。</p></li>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-10-04/08109666982.shtml">《新恶意软件iWorm已感染全球1.7万台Mac电脑》</a>：信息安全研究人员近期发现，全球超过1.7万台Mac电脑已经感染了一种名为“iWorm”的新的OS X恶意软件。这种恶意软件曾使用Reddit网站作为传播媒介，能窃取用户数据，触发多种系统操作，并执行Lua脚本。用户可以通过测试路径<code>/Library/Application Support/JavaW</code>是否存在，在判断是否中病毒。如果OS X找不到这一文件夹，那么Mac电脑就是安全的。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://swift-cheatsheet.co.uk/">《iOS8 Swift Cheat Sheet and Quick Reference Guide》</a>：这份速查表列出了Swift的常见的基本用法。</p></li>
<li><p><a href="http://bbs.iosre.com/forum.php?mod=viewthread&amp;tid=422">《 获取当前安装的所有App》</a>：作者介绍了利用私有API在非越狱的iOS 7和8机器上，获取iOS中安装的所有App的办法。</p></li>
<li><p><a href="http://weibo.com/p/23041889d963070102v39b">《iOS8企业应用部署Bug》</a>：作者发现使用iOS企业部署（In-HouseDistribution）方式进行应用升级时，在iOS8下无法成功，删除应用再重新安装也不行。经过调研，作者发现这个是Apple的bug，并且提供了临时解决办法。</p></li>
<li><p><a href="https://designcode.io/learn">《The best resources for learning iOS design and Xcode》</a>：作者整理了一系列关于iOS 设计和 Xcode 方面的学习资源，并提供邮件订阅。</p></li>
<li><p><a href="http://www.iwangke.me/2014/10/06/how-to-implement-a-core-animation-based-60-fps-ktv-lyrics-view/">《基于Core Animation的KTV歌词视图的平滑实现》</a>：文章介绍了唱吧歌词视图的技术实现细节。</p></li>
<li><p><a href="https://medium.com/swift-programming/15-swift-ios-open-source-projects-you-cannot-ignore-6bd4ac37d7dd">《10 Swift IOS open-source projects you cannot ignore》</a>：文章介绍了10大不能错过的 Swift 开源项目。</p></li>
<li><p><a href="http://www.appdesignvault.com/ios-8-custom-keyboard-extension/#a_aid=mdev">《iOS 8 Custom Keyboard Tutorial: How to Create A Third-Party Keyboard Extension》</a>：文章介绍了如何在iOS8下自定义键盘。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><p><a href="http://www.guomii.com/posts/39029">《Apple 发布 Swift 语言和 Xcode 入门视频》</a>：Apple 在 Swift 官方博客上发布了一段6分钟多的视频，介绍如何从零开始使用 Xcode 套件开发 iOS 应用，非常值得想现在开始学 iOS 开发的朋友一看。</p></li>
<li><p><a href="https://www.youtube.com/watch?v=XhXC4SKOGfQ">《Facebook&rsquo;s iOS Infrastructure》</a>：Facebook在视频中分享了他们的iOS端架构。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/SwiftP2P/SwiftSSL">SwiftSSL</a>：SwiftSSL 是一个基于CommonCrypto的Swift语言的加密库。</p></li>
<li><p><a href="https://github.com/daltoniam/SwiftHTTP">SwiftHTTP</a>：用Swift语言实现的HTTP网络库。</p></li>
<li><p><a href="https://github.com/stephencelis/SQLite.swift">SQLite.swift</a>：SQLite.swift是一个将SQLite3封装成Swift语言的包装库。</p></li>
<li><p><a href="https://github.com/Brimizer/Slidden">Slidden</a>: Slidden是一个老外开源的开发自定义键盘的库，利用这个开源库，可以方便的配置键位、颜色以及键位对应的图片。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开源一个Key-Value存储工具类]]></title>
    <link href="http://blog.devtang.com/blog/2014/10/03/opensouce-a-key-value-storage-tool/"/>
    <updated>2014-10-03T22:06:18+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/10/03/opensouce-a-key-value-storage-tool</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>还记得大学刚学数据库那会儿，天真地以为世界上所有的存储都需要用数据库来做。后来毕业后，正值NOSQL流行，那时我在网易参与了网易微博的开发，我们当时使用了有道自己做的“BigTable”— OMAP来存储微博数据，那个时候才发现，其实Key-Value这种简单的存储也能搞定微博这类不太简单的存储逻辑。</p>

<p>相比MYSQL，当数据量上千万后，NOSQL的优势体现出来了：对于海量数据，NOSQL在存取速度上没有任何影响，另外，天生的多备份和分布式，也说数据安全和扩容变得异常容易。</p>

<h2>iOS端的尝试</h2>

<p>后来我从后台转做iOS端的开发，我就尝试了在iOS端直接使用Key-Value式的存储。经过在粉笔网、猿题库、小猿搜题三个客户端中的尝试后，我发现Key-Value式的存储不但完全能够满足大多数移动端开发的需求，而且非常适合移动端采用。主要原因是：移动端存储的数据量不会很大：</p>

<ul>
<li>如果是单机的应用（例如效率工具Clear），用户自己一个人创建的数据最多也就上万条。</li>
<li>如果是有服务端的应用（例如网易新闻，微博），那移动端通常不会保存全量的数据，每次会从服务器上获取数据，本地只是做一些内容的缓存而已，所以也不会有很大的数据量。</li>
</ul>


<p>如果数据量不大的话，那么在iOS端使用最简单直接的Key-Value存储就能带来开发上的效率优势。它能保证：</p>

<ol>
<li>Model层的代码编写简单，易于测试。</li>
<li>由于Value是JSON格式，所以在做Model字段更改时，易于扩展和兼容。</li>
</ol>


<h2>实现方案</h2>

<p>在存储引擎上，2年前我直接选择了Sqlite当做存储引擎，相当于每个数据库表只有Key，Value两个字段。后来，随着LevelDB的流行，业界也有一些应用采用了LevelDB来做iOS端的Key-Value存储引擎，例如开源的<a href="https://github.com/viewfinderco/viewfinder">ViewFinder</a>。</p>

<p>因为LevelDB本身并不是为移动端设计的，我担心它过于占用内存，我自己也没有看到业界有在移动端针对LevelDB做很详细的测试，连LevelDB的iOS端移植都不是官方做的。加上我自己写的基于Sqlite的Key-Value存储用着也没有什么问题，所以我也就一直没有更换成LevelDB。</p>

<h2>开源</h2>

<p>经过两年的使用和测试，我认为它非常好用，而且代码也非常简单，只有不到400行。所以现在开源分享给大家，这个项目叫<a href="https://github.com/yuantiku/YTKKeyValueStore">YTKKeyValueStore</a>，项目代码在<a href="https://github.com/yuantiku/YTKKeyValueStore">这里</a>。</p>

<p>以下是一个简单的使用示例：</p>

<p><code>
YTKKeyValueStore *store = [[YTKKeyValueStore alloc] initDBWithName:@"test.db"];
NSString *tableName = @"user_table";
[store createTableWithName:tableName];
// 保存
NSString *key = @"1";
NSDictionary *user = @{@"id": @1, @"name": @"tangqiao", @"age": @30};
[store putObject:user withId:key intoTable:tableName];
// 查询
NSDictionary *queryUser = [store getObjectById:key fromTable:tableName];
NSLog(@"query data result: %@", queryUser);
</code></p>

<h2>集成说明</h2>

<p>使用本项目，你需要将开源代码中的<code>YTKKeyValueStore.h</code>和<code>YTKKeyValueStore.m</code>添加到你的工程中，并且在工程设置的<code>Link Binary With Libraries</code>中，增加<code>libsqlite3.dylib</code>，如下图所示：</p>

<p><img src="/images/key-value-store-setup.jpg"></p>

<p>由于时间关系，当前还未提供Cocoapods方式集成。</p>

<h2>使用说明</h2>

<p>所有的接口都封装在<code>YTKKeyValueStore</code>类中。以下是一些常用方法说明。</p>

<h3>打开（或创建）数据库</h3>

<p>通过<code>initDBWithName</code>方法，即可在程序的<code>Document</code>目录打开指定的数据库文件。如果该文件不存在，则会创建一个新的数据库。</p>

<p><code>
// 打开名为test.db的数据库，如果该文件不存在，则创新一个新的。
YTKKeyValueStore *store = [[YTKKeyValueStore alloc] initDBWithName:@"test.db"];
</code></p>

<h3>创建数据库表</h3>

<p>通过<code>createTableWithName</code>方法，我们可以在打开的数据库中创建表，如果表名已经存在，则会忽略该操作。如下所示：</p>

<p><code>
YTKKeyValueStore *store = [[YTKKeyValueStore alloc] initDBWithName:@"test.db"];
NSString *tableName = @"user_table";
// 创建名为user_table的表，如果已存在，则忽略该操作
[store createTableWithName:tableName];
</code></p>

<h3>读写数据</h3>

<p><code>YTKKeyValueStore</code>类提供key-value的存储接口，存入的所有数据需要提供key以及其对应的value，读取的时候需要提供key来获得相应的value。</p>

<p><code>YTKKeyValueStore</code>类支持的value类型包括：NSString, NSNumber, NSDictionary和NSArray，为此提供了以下接口：</p>

<p><code>
- (void)putString:(NSString *)string withId:(NSString *)stringId intoTable:(NSString *)tableName;
- (void)putNumber:(NSNumber *)number withId:(NSString *)numberId intoTable:(NSString *)tableName;
- (void)putObject:(id)object withId:(NSString *)objectId intoTable:(NSString *)tableName;
</code></p>

<p>与此对应，有以下value为NSString, NSNumber, NSDictionary和NSArray的读取接口：</p>

<p><code>
- (NSString *)getStringById:(NSString *)stringId fromTable:(NSString *)tableName;
- (NSNumber *)getNumberById:(NSString *)numberId fromTable:(NSString *)tableName;
- (id)getObjectById:(NSString *)objectId fromTable:(NSString *)tableName;
</code></p>

<h3>删除数据接口</h3>

<p><code>YTKKeyValueStore</code>提供了以下接口用于删除数据。</p>

<p>```
// 清除数据表中所有数据
&ndash; (void)clearTable:(NSString *)tableName;</p>

<p>// 删除指定key的数据
&ndash; (void)deleteObjectById:(NSString <em>)objectId fromTable:(NSString </em>)tableName;</p>

<p>// 批量删除一组key数组的数据
&ndash; (void)deleteObjectsByIdArray:(NSArray <em>)objectIdArray fromTable:(NSString </em>)tableName;</p>

<p>// 批量删除所有带指定前缀的数据
&ndash; (void)deleteObjectsByIdPrefix:(NSString <em>)objectIdPrefix fromTable:(NSString </em>)tableName;
```</p>

<h3>更多接口</h3>

<p><code>YTKKeyValueStore</code>还提供了以下接口来获取表示内部存储的key-value对象。</p>

<p><code>
// 获得指定key的数据
- (YTKKeyValueItem *)getYTKKeyValueItemById:(NSString *)objectId fromTable:(NSString *)tableName;
// 获得所有数据
- (NSArray *)getAllItemsFromTable:(NSString *)tableName;
</code></p>

<p>由于<code>YTKKeyValueItem</code>类带有<code>createdTime</code>字段，可以获得该条数据的插入（或更新）时间，以便上层做复杂的处理（例如用来做缓存过期逻辑）。</p>

<h2>其它</h2>

<p>两年前写过不少测试用例，后来给弄丢了，所以现在开项项目中还没有测试用例。由于时间关系，更详细的使用说明稍后会更新到项目中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第26期]]></title>
    <link href="http://blog.devtang.com/blog/2014/09/24/ios-weekly-26/"/>
    <updated>2014-09-24T20:49:02+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/09/24/ios-weekly-26</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/09/swift-strong-point">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：Swift 的强大之处、iOS8开发者专题、在Xcode 6中使用矢量PDF、iOS 8 App Extensions等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://www.guomii.com/posts/38832">《Apple 上线 Android 到 iPhone 数据迁移教程》</a>：为了让更多的 Android 用户加入到 iPhone 阵营，Apple 主动出击，上线了一个<a href="http://support.apple.com/kb/HT6407">专门的页面</a>，帮助 Android 用户购买 iPhone 之后迁移数据。涉及到的内容包括邮件、通讯录、日历、照片、视频、音乐、电子书、PDF、文档、应用等的迁移。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://objccn.io/issue-16-1/">《Swift 的强大之处》</a>：介绍了Swift语言的特性，包括支持函数式编程、类型安全、不可变性等。</p></li>
<li><p><a href="http://objccn.io/issue-16-4/">《Swift 的函数式 API》</a>：Swift 引入了泛型和函数式编程的思想，极大地扩展了设计的空间。文章借对 Core Image 进行函数式 API 封装为例，展示出应用 Swift 进行函数式编程的能力。</p></li>
<li><p><a href="http://www.cocoachina.com/special/ios8/">《iOS8开发者专题》</a>：由CocoaChina整理出来的iOS8相关的资料汇总。</p></li>
<li><p><a href="http://blog.callmewhy.com/2014/09/15/todo-list-in-swift/">《用 Swift 开发一个 TODO 应用》</a>：作者 <a href="http://weibo.com/small1030light">@请叫我汪二</a> 在文章中教你如何完成一个 TODO 的应用，功能包括添加任务和浏览任务。适合有一定 Objective-C 的开发基础但是还没怎么接触 Swift 的 iOS 开发者，希望通过这样一个简单的例子可以和大家一起熟悉一下 Swift。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2014/09/15/objc-attribute-cleanup/">《黑魔法<strong>attribute</strong>((cleanup))》</a>：编译器属性 <code>__attribute__</code>用于向编译器描述特殊的标识、检查或优化。作者在文章中介绍了其中一个名为<code>cleanup</code>的“黑魔法”属性。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/swiftzhong-lei-de-chu-shi-hua-qi-yu-ji-cheng">《Swift中类的初始化器与继承》</a>：Swift 为类定义了两种初始化器来确保类中所有的储存属性都能得到一个初始化值。这两种初始化器就是「指定初始化器」(Designated Initializer)与「便利初始化器」(Convenience Initializer)，文章对其做了介绍。</p></li>
<li><p><a href="http://blog.ibireme.com/2014/09/16/adapted_to_iphone6/">《大屏iPhone的适配》</a>：自从苹果出了大屏iPhone后，iOS开发也要做适配了， 这里大概总结下这几天了解到的大屏适配的注意事项。</p></li>
<li><p><a href="http://martiancraft.com/blog/2014/09/vector-images-xcode6/">《Using Vector Images in Xcode 6》</a>：文章介绍了在Xcode 6中使用矢量PDF图形的具体操作方法。</p></li>
<li><p><a href="http://radex.io/swift/methods/">《Swifty methods》</a>：文章讨论了Swift的函数命名习惯，并与Objective-C语言做了对比。</p></li>
<li><p><a href="https://developer.apple.com/apple-pay/Apple-Pay-Human-Interface-Guidelines.pdf">《Apple Pay Human Interface Guidelines》</a>：苹果发布了支付功能Apple Pay的人机交互指南。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://www.raywenderlich.com/83021/ios-8-app-extensions-tech-talk-video">《iOS 8 App Extensions Tech Talk Video》</a>：该视频介绍了iOS 8引入的App Extensions功能。从用户视角和开发者视角分别对其做了介绍。</li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="http://www.wuwacorp.com/specking/">specKing</a>：specKing 与 <a href="http://www.getmarkman.com/">马克鳗</a> 功能类似，用于全自动标示美术稿。不过 specKing 是以付费的 PS 外挂的形式发布的。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="https://github.com/shu223/iOS8-Sampler">iOS8-Sampler</a>：日本的shuさん制作的 iOS8 参考代码集。由 <a href="http://weibo.com/u/2289288323">@kimsungwhee</a> 推荐。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第25期]]></title>
    <link href="http://blog.devtang.com/blog/2014/09/14/ios-weekly-25/"/>
    <updated>2014-09-14T19:56:42+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/09/14/ios-weekly-25</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/09/iphone-6-release">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：苹果发布 iPhone6 和 Apple Watch、Swift 1.0 GM发布、Xcode 6支持PDF Vector作为图像素材、iPhone6分辨率与适配等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://news.ifeng.com/a/20140910/41926157_0.shtml">《苹果发布 iPhone6 和 Apple Watch》</a>：北京时间9月10日凌晨1点，美国苹果公司在30年前发布Mac电脑的故地，正式发布了全新一代 iPhone 6以及可穿戴设备 Apple Watch。</p></li>
<li><p><a href="http://www.infoq.com/cn/news/2014/09/swift-10-gm">《Swift 1.0 GM发布》</a>：北京时间9月10日，Swift迎来了第二个里程碑：Swift 1.0 GM发布。GM是Golden Master的缩写，GM版几乎等同于正式版.不过这次苹果还特意在发布新闻中提到GM版并非final版本，未来Swift还将添加其它更高级的新功能、提升性能以及精简语法。</p></li>
<li><p><a href="http://weibo.com/1846569133/BmD7gEvkZ">《Xcode 6支持PDF Vector作为图像素材》</a>：Xcode 6 的默认 App 模板已经用 PDF Vector 矢量作为图像素材了。所以 iOS 的适配可以说是轻松的，布局用 AutoLayout，图标用矢量，可以无视分辨率的存在。设计师们在用 Sketch 设计时，不要再输出1x、2x、3x 的 PNG 了。</p></li>
<li><p><a href="http://digi.it.sohu.com/20140912/n404256321.shtml">《苹果隐晦表示Apple Watch续航约为一天》</a>：苹果没有在发布会上提到Apple Watch的续航问题，但在记者问到时，苹果官方的回复是：“我们没有对外公布，但是我们希望用户白天戴表，晚上可以充电。”</p></li>
<li><p><a href="http://weibo.com/1708947107/BmuUHA9RY?mod=weibotime#_rnd1410529835695">《iTunes Connect Bug导致只接受支持arm64的应用》</a>：苹果9月10日的iTunes Connect更新造成一个Bug，导致审核后台只接受支持arm64的应用上传。由于国内大量的第三方SDK并未更新到支持arm64，所以此Bug导致国内众多应用无法上传。好在问题只持续了一天，但是此事也给那些一直懒于更新第三方SDK的厂商敲响了警钟。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://www.objc.io/issue-16/">《Swift》</a>：objc.io第16期的专题为Swift，为我们带来了关于Swift的5篇精品文章。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2014/09/10/iphone6-resolution/">《iPhone6分辨率与适配》</a>：文章介绍了iPhone6的图片适配问题。</p></li>
<li><p><a href="http://www.taofengping.com/2014/09/09/leak-GPUImage_cocoapods/#.VBL897ySyXw">《你的Pod出现内存泄露了吗》</a>：文章介绍了深度使用Cocoapods时可能遇到的内存泄漏问题。</p></li>
<li><p><a href="http://kimsungwhee.com/xcode6-%E5%BC%80%E5%90%AF-iphone6-iphone6-plus-%E5%88%86%E8%BE%A8%E7%8E%87/">《xcode6 开启 iPhone6 &amp; iPhone6 plus 分辨率》</a>：文章介绍了在Xcode6 GM下如何开启iPhone6和iPhone6 plus的分辨率。作者微博：<a href="http://weibo.com/u/2289288323">@kimsungwhee</a>。</p></li>
<li><p><a href="http://www.bignerdranch.com/blog/asynchronous-testing-with-xcode-6/">《Asynchronous Testing With Xcode 6》</a>：在Xcode 6以前，写异步的测试用例比较麻烦。该文章介绍了在Xcode 6下使用<code>XCTestExpectation</code>类，如何更方便地写一些异步的测试用例。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/tonymillion/Reachability">Reachability</a>：苹果提供过一个Reachability类，用于检测网络状态。但是该类由于年代久远，并不支持ARC。该项目旨在提供一个苹果的Reachability类的替代品，支持ARC和block的使用方式。</p></li>
<li><p><a href="https://github.com/ch3n/ZAlert">ZAlert</a>：ZAlert是一个用Swift实现的，用于显示<code>UIAlertView</code>和<code>UIActionSheet</code>的工具类，支持链式调用，仅支持iOS8。作者微博：<a href="http://weibo.com/fantcbug">@ch3nz</a>。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第24期]]></title>
    <link href="http://blog.devtang.com/blog/2014/09/09/ios-weekly-24/"/>
    <updated>2014-09-09T21:16:05+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/09/09/ios-weekly-24</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/09/itunes-connect">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：苹果更新了iTunes Connect的设计、UIKit Dynamics 教程：抛掷 Views、iOS APP 架构漫谈等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://www.36kr.com/p/215155.html">《苹果更新了 iTunes Connect 的设计》</a>：新版的iTunes Connect与 iOS 即视感更浓厚，与 iCloud.com 的风格更搭。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://beyondvincent.com/blog/2014/09/02/uikit-dynamics-tutorial-tossing-views/">《UIKit Dynamics 教程：抛掷 Views》</a>：文章介绍了如何用手势很自然的将 view 抛掷出屏幕。本文非常适合中级开发者，因为对 view 抛掷操作中，使用的技术嵌套了多个效果，例如使用内置的 UIKit 框架对 view 进行旋转 (rotation)、飞离 (fly-away) 动画。</p></li>
<li><p><a href="http://studentdeng.github.io/blog/2014/08/29/ios-architecture/">《iOS APP 架构漫谈》</a>：文章从一些具体的场景出发，讲解iOS应用架构的技巧。</p></li>
<li><p><a href="http://www.anselz.com/2014/09/07/objective-c%E4%B8%AD%E7%9A%84initialize%E5%92%8Cload/">《Objective-C中的+initialize和+load》</a>：文章介绍了Objective-C中的<code>+initialize</code>和<code>+load</code>方法的一些执行细节和注意事项。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2014/08/30/objc-pre-main/">《iOS程序main函数之前发生了什么》</a>：一个iOS app的main()函数位于main.m中，这是我们熟知的程序入口。但对objc了解更多之后发现，程序在进入我们的main函数前已经执行了很多代码，比如熟知的+ load方法等。本文将跟随程序执行顺序，刨根问底，从dyld到runtime，看看main函数之前都发生了什么。</p></li>
<li><p><a href="http://mattgemmell.com/api-design/">《API Design》</a>：文章介绍了Objective-C中类、接口以及通知的接口设计原则。</p></li>
<li><p><a href="https://developer.apple.com/app-store/review/rejections/">《Common App Rejections》</a>：苹果官方总结了一些常见的应用审核被拒的情况。</p></li>
<li><p><a href="http://furbo.org/2014/09/03/xcode-vs-gatekeeper/">《Xcode vs. Gatekeeper》</a>：文章介绍了通过禁用 Gatekeeper 的功能，来加快第一次开启Xcode 的速度的办法。</p></li>
<li><p><a href="http://www.merowing.info/2014/07/implementing-observable-in-swift/#.VA1YcrySyXw">《Implementing Observable in Swift》</a>：文章介绍了如何在Swift中实现类似Objective-C中的KVO功能。</p></li>
<li><p><a href="http://chris.eidhof.nl/posts/swift-ideas.html">《Some ideas for projects in Swift》</a>：文章列出了Swift要真正被大家方便使用起来，还需要提供的第三方库。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://www.infoq.com/cn/presentations/evolution-and-enlightenment-of-qq-im-backend-architecture">《QQ IM后台架构的演化与启示(二) &mdash;移动时代》</a>：腾讯技术副总监韦彬介绍了QQ IM后台包括状态系统、消息系统、逻辑层等基础架构是如何应对移动时代的挑战并继续演化。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/yuhua-chen/MCLog">MCLog</a>: MCLog是一个可以提供Xcode中的console log过滤功能的Xcode插件。</p></li>
<li><p><a href="http://www.relativewave.com/form.html">Form</a>：Form是一个类似Origami的原型设计工具。它比Origami强大的地方在于，它可以直接在移动端查看效果。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="https://github.com/ParsePlatform/f8DeveloperConferenceApp">f8DeveloperConferenceApp</a>：这是一个f8 Conference Apps的会议应用，由Parse开源。</li>
</ol>

]]></content>
  </entry>
  
</feed>
