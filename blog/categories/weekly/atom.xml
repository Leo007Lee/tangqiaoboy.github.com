<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: weekly | 唐巧的技术博客]]></title>
  <link href="http://blog.devtang.com/blog/categories/weekly/atom.xml" rel="self"/>
  <link href="http://blog.devtang.com/"/>
  <updated>2015-03-17T22:27:32+08:00</updated>
  <id>http://blog.devtang.com/</id>
  <author>
    <name><![CDATA[唐巧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第40期]]></title>
    <link href="http://blog.devtang.com/blog/2015/03/10/ios-weekly-40/"/>
    <updated>2015-03-10T20:48:50+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/03/10/ios-weekly-40</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，文章地址是<a href="http://www.infoq.com/cn/news/2015/03/implementation-of-kvo">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：iOS 开发者收入调查报告、如何自己动手实现 KVO、QQ 中未读气泡拖拽消失的实现分析、InfoQ 上移动端话题汇总、UIResponder 等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://www.cocoachina.com/apple/20150306/11250.html">《iPhone 6 再立功：中国区 iOS 份额历史新高》</a>：据来自 Kantar Worldpanel ComTech 的最新数据，截止至 2015 年一月的前三个月内，苹果 iOS 系统份额在中国区创历史新高，卖出的每四台智能手机就有一个是 iPhone。</p></li>
<li><p><a href="http://www.cocoachina.com/programmer/20150304/11205.html">《iOS 开发者收入调查报告（一）：个人开发者篇》</a>：2014 年 12 月，CocoaChina 以网上调查问卷形式发起了 “2014 iOS 开发者收入调查报告” 活动，得到了广大开发者的支持。在对问卷数据进行了整理分析后形成了本次调查报告，从而让我们对国内 iOS 开发者的收入和生存状态有一个大概的了解。本文是该调查的最终报告。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://tech.glowing.com/cn/implement-kvo/">《如何自己动手实现 KVO》</a>：KVO 是 Objective-C 对观察者模式（Observer Pattern）的实现。也是 Cocoa Binding 的基础。当被观察对象的某个属性发生更改时，观察者对象会获得通知。本文探究了 KVO (Key-Value Observing) 实现机制，并去实践一番：利用 Runtime 自己动手去实现 KVO 。</p></li>
<li><p><a href="http://kittenyang.com/drawablebubble/">《QQ 中未读气泡拖拽消失的实现分析》</a>：QQ 中针对强迫症有个很棒的交互，对于那些暂时不想理会的未读信息气泡，可以直接手指拖拽去掉。本文介绍了其实现方法。</p></li>
<li><p><a href="http://t.cn/Rw3he5x">《UITextView 编辑时插入自定义表情-简单的图文混编》</a>：在 iOS 开发中，经常需要用 UITextView 作为编辑文本的输入控件。但是如何在编辑时插入自定义表情呢？本文简单的用 NSTextAttachment、NSAttributedString 的特性，实现了在 UITextView 中编辑文字时插入自定义表情图片，同时可以返回带有表情 “替换符” 的纯文本字符串。</p></li>
<li><p><a href="http://tutuge.me/2015/02/19/%E6%8F%90%E5%8D%87UITableView%E6%80%A7%E8%83%BD-%E5%A4%8D%E6%9D%82%E9%A1%B5%E9%9D%A2%E7%9A%84%E4%BC%98%E5%8C%96/">《提升 UITableView 性能-复杂页面的优化》</a>：随着 App 的用户界面的内容越来越丰富，再强的手机可能都无法同时渲染复杂的 UI 界面和保证流畅的体验。本文分享了一些提升 UITableView 性能的技巧。</p></li>
<li><p><a href="http://weibo.com/p/1001603816757822408978">《InfoQ 上移动端话题汇总》</a>：<a href="http://weibo.com/ranwj">@ 移动开发小冉</a> 整理了一下 InfoQ 上关于移动方面的分享内容，涉及移动端架构、测试、流程优化等多方面的内容。</p></li>
<li><p><a href="http://blog.csdn.net/zhengminwudi/article/details/43916791">《 在非越狱的 iPhone 6 (iOS 8.1.3) 上进行钓鱼攻击 (盗取 App Store 密码)》</a>：iOS 逆向工程的一大应用场景是 iOS 安全。它既可以作为攻击的矛，也可以作为防御的盾。由蒸米带来的本文就是一则典型的以逆向工程为矛的案例，他对 CoreFoundation 里私有函数的运用画龙点睛，值得学习。</p></li>
<li><p><a href="http://southpeak.github.io/blog/2015/03/07/uiresponder/">《UIResponder》</a>：在 UIKit 中，IApplication、UIView、UIViewController 这几个类都是直接继承自 UIResponder 类。另外 SpriteKit 中的 SKNode 也是继承自 UIResponder 类。因此 UIKit 中的视图、控件、视图控制器，以及我们自定义的视图及视图控制器都有响应事件的能力。本文详细介绍了一个 UIResponder 类提供的基本功能。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2015/03/01/todo-macro/">《实现一个 TODO 宏》</a>：文章介绍了如何实现一个能产生编译器警告的 TODO 宏，用于在代码里做备忘。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://jlongster.com/First-Impressions-using-React-Native">《First Impressions using React Native》</a>：作者介绍了他使用 Facebook 即将开源的 React Native 的感受。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/kstenerud/iOS-Universal-Framework">iOS-Universal-Framework</a>：iOS-Universal-Framework 是一个方便你将第三方 SDK 编译成 Framework 的开源工具。</p></li>
<li><p><a href="http://facebook.github.io/origami/">Origami</a>：Origami Live 支持在 iOS 设备上预览 Quartz Composer 项目，Origami 2.0 添加了导出 Objective-C、Java、JS 代码的功能，以后做原型效率更高了。由 <a href="http://weibo.com/lexrus">@ 汤圣罡</a> 推荐。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="link">NativeScript</a>：NativeScript 是一个类似 React Native 的开源框架，使用 JavaScript 调用原生 API，构建原生应用，支持 iOS、 Android 和 WP 等多平台。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第39期]]></title>
    <link href="http://blog.devtang.com/blog/2015/03/01/ios-weekly-39/"/>
    <updated>2015-03-01T13:46:28+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/03/01/ios-weekly-39</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，文章地址是<a href="http://www.infoq.com/cn/news/2015/02/core-image-introduction">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：Core Image 介绍、写 iOS SDK 注意事项、利用 CocoaLumberjack 搭建自己的 Log 系统、KSHObjcUML 等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://www.williamlong.info/archives/4142.html">《Google 宣布淘汰 SPDY》</a>：Google 宣布计划淘汰该公司在 2009 年推出的 SPDY 协议，SPDY 原本定位为替代 HTTP 协议的新协议，Google 原本打算以它来加速 HTTP 的传输速度并推动成为标准，不过现在决定将支持 HTTP/2，并逐渐淘汰 SPDY，预计 2016 年就会完全从 Chrome 中移除对 SPDY 协议的支持。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://objccn.io/issue-21-6/">《Core Image 介绍》</a>：这篇文章为初学者介绍了 Core Image，一个 OS X 和 iOS 的图像处理框架。</p></li>
<li><p><a href="http://limboy.me/ios/2015/02/07/builder-pattern.html">《Builder Pattern 在 Objective-C 中的使用》</a>：作者从一个真实场景出发，介绍了结合 block 使用工厂模式的实践方式。</p></li>
<li><p><a href="http://blog.devtang.com/blog/2015/01/31/write-sdk-tips/">《写 iOS SDK 注意事项》</a>：我发现即使是像腾讯、小米这样的大厂提供的 SDK，在质量和规范上也有很多问题，文本分享了写 iOS SDK 注意事项。</p></li>
<li><p><a href="http://imtx.me/archives/1926.html">《CoreData 与 ReactiveCocoa 混用时要注意的线程问题》</a>：作者从一个 Crash 出发，分享了查找和修复问题的整个过程。</p></li>
<li><p><a href="http://www.jianshu.com/p/5adb536fd32b">《iOS 开发如何快速成长 ?》</a>：作者分享了自己的一些心得，包括：做有难度的项目、尽量少抱大腿、多读源码、多读国外的 iOS 开发网站和 blog、要孜孜不倦的学习。</p></li>
<li><p><a href="http://www.jianshu.com/p/f888db82fc27">《久违的的 LLDB 篇一，让 lldb 提升你的效率》</a>：作者分享了一些 LLDB 使用小技巧。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/li-yong-cocoalumberjack-da-jian-zi-ji-de-log-xi-tong">《利用 CocoaLumberjack 搭建自己的 Log 系统》</a>：CocoaLumberjack 最早是由 Robbie Hanson 开发的日志库，可以在 iOS 和 MacOSX 开发上使用。其简单，快读，强大又不失灵活。本文介绍了利用 CocoaLumberjack 搭建自己的 Log 系统的过程。</p></li>
<li><p><a href="https://mikeash.com/pyblog/friday-qa-2015-02-20-lets-build-synchronized.html">《Let&rsquo;s Build @synchronized》</a>：本文讲解了 synchronized 关键字的内部实现原理。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://realm.io/news/andy-matuschak-controlling-complexity/">《Controlling Complexity in Swift》</a>：本视频的作者来自 <a href="https://twitter.com/andy_matuschak">Andy Matuschak</a>，他曾在苹果 UIKit 组工作，在本视频中，他分享了用 Swift 来控制复杂度的经验。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/kimsungwhee/KSHObjcUML">KSHObjcUML</a>：KSHObjcUML 是一个 Objective-C 类引用关系图的 Xcode 插件。作者是：<a href="http://weibo.com/u/2289288323">@kimsungwhee</a>。</p></li>
<li><p><a href="https://itunes.apple.com/app/id961651406">Xliffie</a>：Xliffie 是 <a href="http://weibo.com/lexrus">@ 汤圣罡</a> 推荐的一个本地化必备工具，它对 Xcode 生成的 Xliff 文件支持较好。</p></li>
</ol>


<p> <hr />
广告：亚马逊上正在销售我的《iOS开发进阶》签名版，输入优惠码<code>JXBEGSGKUV</code>，可在结帐时减7元，点击查看：<a href="http://www.amazon.cn/b?node=1474130071">购买链接</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第38期]]></title>
    <link href="http://blog.devtang.com/blog/2015/02/05/ios-weekly-38/"/>
    <updated>2015-02-05T21:36:03+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/02/05/ios-weekly-38</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，文章地址是<a href="http://www.infoq.com/cn/news/2015/02/facebook-react-native">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期 iOS 移动开发周报带来如下内容：Facebook 推出 React Native、Swift 小技巧、RunLoop 主题的分享、使用蒲公英来做 iOS 测试应用的分发等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2015-01-25/10049980631.shtml">《分析师称 14 年四季度 iPhone 销量达 7300 万台》</a>：1 月 25 日上午消息，凯基证券分析师郭明池称，2014 年四季度 iPhone 销量达 7300 万台，iPad 销量达 2140 万台；并预计 2015 年一季度 iPhone 销量为 6160 万台，iPad 销量为 1010 万台。</p></li>
<li><p><a href="http://tech.sina.com.cn/i/2015-01-23/doc-iavxeafs0339155.shtml">《2014 年 iOS 应用开发者收入超好莱坞美国票房》</a>：市场研究公司 Asymco 分析师霍拉斯·德迪乌 (Horace Dediu) 本周发布研究报告称，iOS 应用经济的规模已经超过了好莱坞电影在美国的票房。2014 年全年，开发者通过苹果获得的收入为 100 亿美元。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://objccn.io/issue-20/">《objc 中国 Issue 20：访谈》</a>：
objc 中国 Issue 20 完成了三位传奇开发者的访谈，很有意思。从天才少年 Andy Matuschak ，到两次创业的 Loren Brichter，以及俄国妹子 Natasha Murashev，篇篇精彩。希望通过了解他们的经历，你会有所收获。</p></li>
<li><p><a href="http://www.jianshu.com/p/5d4789db4310">《Swift 怎样更优雅地处理网络返回数据》</a>：我们在 iOS 开发中进行网络请求的时候，一般是获取到服务器返回的 data 后，再根据我们的需要转换成 JSON，图像等信息。但如果你的应用中存在各种类型的返回数据，那么你可能就要在各个网络请求的中进行重复的处理了。本文介绍了如何使用 Swift 中的泛型和 extension 让你的数据解析工作更优雅。</p></li>
<li><p><a href="http://arstechnica.com/apple/2014/10/os-x-10-10/22/">《OS X 10.10 Yosemite: The Ars Technica Review》</a>：由 <a href="http://www.weibo.com/tualatrix?from=feed&amp;loc=avatar">图拉鼎</a> 推荐：这篇从 CPU 指令集、编译器来剖析 Swift 的文章，对其的设计越来越肯定了。简单的说，Swift 是一门使用 High Level 语言的语法及特性，同时仍有 Low Level 效能的一门语言。</p></li>
<li><p><a href="http://imtx.me/archives/1921.html">《Swift 小技巧（三）：如何用 Swift 思维设计网络请求》</a>：近来在用 Swift 开发 App 的过程中，最大的心得就是：我开始渐渐用「Swift 思维」来思考了。回顾刚开始我用 Swift 时，只是套用它的语法而已，脑子里依然是 Objective-C 思维。这段时间，随着对 Swift 基本特性的掌握，我开始有意识地学习并尝试一些 Swift 才有的特性，此谓「Swift 思维」。Swift 有很多专有（Objective-C 没有的）的模式，今天我就从一个很简单的例子讲起，那就是：如何用 Swift 思维设计网络请求。</p></li>
<li><p><a href="http://imtx.me/archives/1924.html">《wift 小技巧（五）：正确地启用 Logging 机制》</a>：文章介绍了如何在 Swift 项目里正确地设置 Logging 。</p></li>
<li><p><a href="http://nshipster.cn/the-death-of-cocoa/">《The Death of Cocoa》</a>：Cocoa 实际就是 Objective-C 的标准库，包含了许多用语言编写程序最需要的一些框架，例如 Foundation、AppKit 和 Core Data。即使 Swift 才开始被使用几个月，Cocoa 已经开始失去它原有的光芒了。在语言方面，我们都见到了 Swift 是终结 Objective-C 的开始，但是作为基本库的 Cocoa 呢？(这已经不是苹果第一次把它的标准库淘汰了，记得 Carbon 么)？如果我们用 Swift 基本库重新建立一套 Foundation 会怎么样？让我们来看看一些 Cocoa 做过的具体的例子，并看看一个新的 Swift 基本库在哪些地方可以提高。</p></li>
<li><p><a href="http://nshipster.cn/core-location-in-ios-8/">《Core Location in i​OS 8》</a>：自从 iPhone 存在以来，位置服务就一直处于非常重要的位置。Core Location API 也在 iPhone OS SDK 最初的公开版本里就存在了。iOS 8 ，Core Location 被改动了不少，不管是允许开发者做之前并不被允许的开发，还是帮助维护用户隐私。更特别的是，iOS 8 给 Core Location 带来了三个主要的改进：更分化的权限，室内定位以及访问监控。本文对此改进做了详细的介绍。</p></li>
<li><p><a href="http://beyondvincent.com/2015/01/20/2015-01-20-Apple-Watch/">《Apple Watch: WatchKit 应用程序要点》</a>：本文介绍了在开发 Apple Watch 应用程序时需要注意的要点。包括 WatchKit 应用程序和 WatchKit 扩展，以及 WatchKit 应用程序的生命周期。此系列的文章还有：<a href="http://beyondvincent.com/2015/01/20/2015-01-20-watchkit-framework-taking-apps-pocket/">《WatchKit 框架: 将应用程序从裤兜里取出来》</a>。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><p><a href="http://v.youku.com/v_show/id_XODgxODkzODI0.html">《RunLoop 主题的分享 by 孙源 @sunnyxx》</a>：来自百度的孙源组织了一次关于 Objective-C RunLoop 的技术分享。</p></li>
<li><p><a href="https://www.youtube.com/watch?v=KVZ-P-ZI6W4&amp;app=desktop">《React.js Conf 2015 Keynote &ndash; Introducing React Native》</a>：这是 Facebook 出品的 react.js 的视频介绍。Facebook 打算用它来统一移动端的编程语言，react.js 把界面全部用 native 控件实现，js 只作为后端逻辑层。Facebook 也打算开源该框架，如果这个框架成功，将改变整个业界的移动开发效率，因为 iOS 和 android 代码可以大部分复用。注：视频来自 youtube。</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="http://blog.devtang.com/blog/2015/01/22/pgy-usage-guide/">《使用蒲公英来做 iOS 测试应用的分发》</a>： “蒲公英” 是一个应用的免费分发服务，它帮助开发者能够方便地做 iOS 应用的测试分发工作。本文介绍了蒲公英的基本使用方法。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift">Developing iOS 8 Apps with Swift</a>：《Developing iOS 8 Apps with Swift》是 Stanford 公开课，本项目是其中文字幕翻译。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第37期]]></title>
    <link href="http://blog.devtang.com/blog/2015/01/31/ios-weekly-37/"/>
    <updated>2015-01-31T09:34:58+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/01/31/ios-weekly-37</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，地址是<a href="http://www.infoq.com/cn/news/2015/01/ios-v-advanced-technology-road">这里</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>本期 iOS 移动开发周报带来如下内容：iOS大V的技术进阶之路、ARC 对 self 的内存管理、Method Swizzling 和 AOP 实践、使用 iMovie 和 Keynote 制作 App Preview等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://www.cocoachina.com/programmer/20150115/10930.html">《唐巧访谈： iOS大V的技术进阶之路》</a>：文章来自于 CocoaChina 的访谈，采访对象是唐巧，他的新书<a href="https://github.com/tangqiaoboy/iOS-Pro">《iOS开发进阶》</a>已经和大家见面.采访中唐巧表达了他对于技术学习、建设技术影响力等方面的经验和看法。</p></li>
<li><p><a href="http://wangling.me/2015/01/moke-2014.html#fn-1?utm_source=qdan.me#/">《Moke 2014 以及 1 元应用效应》</a>：Moke 作者分享了他的应用在 2014 年的销售额以及他对于 1 元应用的看法。</p></li>
<li><p><a href="http://www.cocoachina.com/programmer/20150121/10966.html">《王巍访谈：关于 Swift 学习和 AppleWatch 开发的一些建议》</a>：文章来自于 CocoaChina 的访谈，采访对象是王巍，微博 ID“onevcat”，圈儿内人称喵神，知名 iOS/Unity 开发者，现居日本，就职于 LINE。喵神是 <a href="http://objccn.io/">objc 中国</a>项目发起人，开源过广受开发者喜爱的 Xcode 插件 VVDocumenter，主创或参与开发《姬骑士和最后的百龙战争》、《英雄 Slash》、《冒险谜题王国》以及《小熊推金币》等多款游戏，个人应用代表有《番茄工作法》(Pomodoro Do) 和《云端记账》(Our Money)。</p></li>
<li><p><a href="http://iiiyu.com/2015/01/20/2014-oh-my-star-app-annual-summary/">《2014 年 Oh My Star 总结》</a>：Oh My Star 是一款由国人 <a href="http://weibo.com/n/Sumi-iYu">@Sumi-iYu</a> 开发的管理 Github 上 star 项目的工具。笔者使用过，对于 star 功能的重度用户来说，非常好用。本文分享了作者在开发该软件的过程以及收货。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://blog.sunnyxx.com/2015/01/17/self-in-arc/">《ARC 对 self 的内存管理》</a>：文章从 YTKNetwork 的几行代码出发，讨论了 LLVM 编译器在传递 self 参数时，对 self 的引用计数的特殊处理。</p></li>
<li><p><a href="http://blog.nswebfrog.com/2015/01/08/autolayout-trick/">《AutoLayout 布局技巧－等宽子视图》</a>：所谓等宽子视图，也就是对一个有 n 个子视图的父视图来说，无论父视图的宽度怎么变化，所有子视图的宽度是相等的。文章介绍了这一类排版需求的 AutoLayout 布局技巧。</p></li>
<li><p><a href="http://tech.glowing.com/cn/objective-c-runtime/">《Objective-C Runtime》</a>：Objective-C 是一个动态语言，这意味着它不仅需要一个编译器，也需要一个运行时系统来动态得创建类和对象、进行消息传递和转发。理解 Objective-C 的 Runtime 机制可以帮我们更好的了解这个语言，适当的时候还能对语言进行扩展，从系统层面解决项目中的一些设计或技术问题。本文讲解了 Runtime 的核心 &ndash; 消息传递 （Messaging）。</p></li>
<li><p><a href="http://tech.glowing.com/cn/method-swizzling-aop/">《Method Swizzling 和 AOP 实践》</a>：利用 Objective-C 的 Runtime 特性，我们可以给语言做扩展，帮助解决项目开发中的一些设计和技术问题。这一篇，我们来探索一些利用 Objective-C Runtime 的黑色技巧。这些技巧中最具争议的或许就是 Method Swizzling 。文本介绍了利用 Method Swizzling，结合 AOP 来做一些打 Log 的工作。利用 objective-C Runtime 特性和 Aspect Oriented Programming ，我们可以把琐碎事务的逻辑从主逻辑中分离出来，作为单独的模块。它是对面向对象编程模式的一个补充。</p></li>
<li><p><a href="http://weibo.com/p/1001603800875490492754">《CocoaPods 最佳实践探讨》</a>：作者在文章中表达了对目前常见的 CocoaPods 使用方法的意见。希望大家根据自己的经验，一起讨论出一份真正的 “最佳实践”。</p></li>
<li><p><a href="http://www.jianshu.com/p/358106d653cf">《使用 iMovie 和 Keynote 制作 App Preview》</a>：App Preview 就是一段 15-30 秒的短视频，用来展示你的应用的特性、用户界面、交互方式等内容。在 App Store 你的应用的详细信息页面里，放在原来的截图之前。体验上会比截图更有冲击力，也能够表现更多的东西。茫茫的 App 海洋之中，如何脱颖而出，卖相至关重要。本文作者分享了他使用 iMovie 和 Keynote 制作 App Preview 的经验，并且提供了相关的效果视频和 Keynote 源文件。</p></li>
<li><p><a href="http://blog.callmewhy.com/2015/01/20/wtf-in-old-code/">《要你命三千：老代码中的那些坑》</a>: 最近在给以前的老项目维护，说起来工作很简单，一个字：改 Bug。这看起来平淡无常的工作，实际上凶险无比，藏坑无数。时至今日，感觉整个人都得到了升华。在睡觉前抽空写篇博客，和各位分享一下踩坑经历，一起品味其中的种种酸苦辣 (没甜)。</p></li>
<li><p><a href="http://natashatherobot.com/unit-testing-swift-dependency-injection/">《Unit Testing in Swift: Dependency Injection》</a>：文章介绍了在 Swift 实现的单元测试中实现依赖注入，不过实际写起来还是比较麻烦。</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://ship.io">ship.io</a>：ship.io 是一个持续集成服务。现在所有套餐免费，支持 Xcode 6.1.1。</p></li>
<li><p><a href="https://crowdin.com/">Crowdin</a>: Crowdin 是一个多语言翻译服务。可以便于开发者将应用改成支持多语言。类似的服务还有：<a href="https://www.transifex.com/">Transifex</a>。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/dasdom/BreakOutToRefresh">BreakOutToRefresh</a>：BreakOutToRefresh 是一个有趣的项目，它利用 SpriteKit 在下拉刷新过程中做了一个打砖块游戏。</p></li>
<li><p><a href="https://github.com/Ramotion/animated-tab-bar">RAMAnimatedTabBarController</a>：RAMAnimatedTabBarController 是一个让 TabBar 上的元素能够显示动画效果的开源库。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第36期]]></title>
    <link href="http://blog.devtang.com/blog/2015/01/18/ios-weekly-36/"/>
    <updated>2015-01-18T10:25:45+08:00</updated>
    <id>http://blog.devtang.com/blog/2015/01/18/ios-weekly-36</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：中国超越美国成最大iPhone消费市场、一个iOS开发工程师的职业规划思考、Functional Swift Conference等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://money.163.com/15/0111/14/AFMEA0VN002526O3.html">《瑞士银行：中国超越美国成最大iPhone消费市场》</a>：瑞士银行统计报告显示，在过去一个季度，苹果向消费者出售了6930万支iPhone。其中，中国区的销量占到总销量的35%，超过美国区24%的占比。瑞士银行的分析师Steven Milunovich提到，“数据显示，iPhone在中国区的销量出现显著增长，在过去这个季度iPhone中国区的销量占到总销量的35%，而这一数 据在去年同期只是22%”。</p></li>
<li><p><a href="http://www.infoq.com/cn/articles/interpretation-of-2014-ios-part-embrace-change">《解读2014之iOS篇：拥抱变化》</a>：对于 iOS 技术领域，2014 年是变化巨大的一年。除了软硬件外，编程语言、中国区、开发社区在 2014 年也有着巨大变化，文章试着用几个关键词来勾勒出 iOS 技术领域在 2014 年所经历的变化。</p></li>
<li><p><a href="http://www.cocoachina.com/appstore/20150109/10887.html">《苹果调整多个国家App Store应用售价》</a>：苹果最近通过邮件告知开发者，即将调整加拿大、俄罗斯以及欧洲一些国家App Store中软件售价。</p></li>
<li><p><a href="http://bbs.iosre.com/forum.php?mod=viewthread&amp;tid=684">《奔向三张，不破不立：一个iOS开发工程师的职业规划思考》</a>：本文作者是《iOS应用逆向工程：分析与实战》的作者。他从自己的经历为例，分享了他自己对于iOS开发工程师的职业规划思考。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://limboy.me/ios/2014/12/31/learning-ios.html">《自学 iOS 开发的一些经验》</a>：不知不觉作为 iOS 开发也有两年多的时间了，记得当初看到 OC 的语法时，愣是被吓了回去，隔了好久才重新耐下心去啃一啃。啃了一阵，觉得大概有了点概念，看到 Cocoa 那么多的 Class，又懵了，怎么才能调用系统的相机？怎么保存信息？怎么做一个像 Twitter 个人页那样的页面？总之就是不知道该从哪切入。现在回想起来，其实路一直都在，而且有很多条，当初如果有人能够指出一条还不错的道，或许就能走得不那么艰难。于是就有了这篇文章，希望对后人能有所帮助吧。</p></li>
<li><p><a href="http://imtx.me/archives/1916.html">《Swift 小技巧（一）：如何正确地定义一个类变量（和类常量）》</a>：Swift 语言对于无论是静态语言过来还是动态语言过来的开发者来说，都有点点不适应，很多问题的解决思路不能用已经习以为常的方法去做。比如一个很常用的：如何定义类变量（和类常量）？本文介绍了作者对此问题的思考。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://2014.funswiftconf.com/">Functional Swift Conference</a>：这是在美国布鲁克林举办的一个关于Swift函数式编程的会议视频。共有6位演讲者介绍了他们对于Swift函数式编程的感悟和心得。</li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="http://pan.baidu.com/s/1gd1noSr">Log Guru</a>：Log Guru是一个收集Log的小工具, 可以在 Mac 上查看 iOS 设备的实时系统日志. 现在可以直接高亮显示在 FIR.im 上安装 app 失败的原因。后续会增加各种进程过滤、高亮某进程、只看 Error level 等功能。与此类似的工具还有：<a href="http://lemonjar.com/iosconsole/">iOS Console</a>。</p></li>
<li><p><a href="http://swiftdoc.org/">SwiftDoc</a>：SwiftDoc是一个在线的Swift帮助文档。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/onevcat/VVBlurPresentation">VVBlurPresentation</a>：VVBlurPresentation是一个很简单易用的在原来view conntroller基础上做模糊，然后present新的view controller的小项目。作者是<a href="http://www.weibo.com/onevcat?from=feed&amp;loc=nickname">onevcat</a>。</p></li>
<li><p><a href="https://github.com/ipader/SwiftGuide/blob/master/Featured.md">《Swift开源项目精选》</a>：该作者将 2014 年 Swift 开源项目做了一个筛选和汇总。</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
