<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: weekly | 唐巧的技术博客]]></title>
  <link href="http://blog.devtang.com/blog/categories/weekly/atom.xml" rel="self"/>
  <link href="http://blog.devtang.com/"/>
  <updated>2014-11-15T08:59:44+08:00</updated>
  <id>http://blog.devtang.com/</id>
  <author>
    <name><![CDATA[唐巧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第30期]]></title>
    <link href="http://blog.devtang.com/blog/2014/11/15/ios-weekly-30/"/>
    <updated>2014-11-15T08:38:00+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/11/15/ios-weekly-30</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/11/masonry-introduction-practise">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：Masonry介绍与使用实践、Objective-C Runtime、iOS APP 架构漫谈、教你用KEYNOTE做出APP原型等。</p>

<h2>教程</h2>

<ol>
<li><p><a href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/">《Masonry介绍与使用实践(快速上手Autolayout)》</a>：iPhone6发布之后，我知道使用autolayout势在必行了，这时想起了以前在浏览Github看到过的一个第三方库Masonry。在花了几个小时的研究使用后，我就将autolayout掌握了(重点是我并没有学习任何的官方文档或者其他的关于autolayout的知识)，这就是我为什么要写下这篇文章来推荐它的原因。Masonry是一个轻量级的布局框架，拥有自己的描述语法，采用更优雅的链式语法封装自动布局，简洁明了并具有高可读性。</p></li>
<li><p><a href="http://yulingtianxia.com/blog/2014/11/05/objective-c-runtime/">《Objective-C Runtime》</a>：因为OC是一门动态语言，所以它总是想办法把一些决定工作从编译连接推迟到运行时。也就是说只有编译器是不够的，还需要一个运行时系统 (runtime system) 来执行编译后的代码。这就是 Objective-C Runtime 系统存在的意义，它是整个OC运行框架的一块基石。本文详细整理了 Cocoa 的 Runtime 系统的知识，它使得 Objective-C 如虎添翼，具备了灵活的动态特性，使这门古老的语言焕发生机。主要内容包括：与Runtime交互、Runtime术语、消息机制、动态方法解析、消息转发、壮的实例变量(Non Fragile ivars)、Objective-C Associated Objects。</p></li>
<li><p><a href="http://chun.tips/blog/2014/11/05/bao-gen-wen-di-objective%5Bnil%5Dc-runtime(1">《刨根问底Objective－C Runtime（1）－ Self &amp; Super》</a>%5Bnil%5D-self-and-super/)：本文通过分析clang重写的Objective-C源码，从而解释Objective-C中的self和super在编译器层面分别是如何处理的。</p></li>
<li><p><a href="http://chun.tips/blog/2014/11/05/bao-gen-wen-di-objective%5Bnil%5Dc-runtime-(2">《刨根问底Objective－C Runtime（2）－ Object &amp; Class &amp; Meta Class》</a>%5Bnil%5D-object-and-class-and-meta-class/)：本文主要讲述objc runtime中关于Object &amp; Class &amp; Meta Class的细节。</p></li>
<li><p><a href="http://studentdeng.github.io/blog/2014/11/05/ios-architecture2/">《iOS APP 架构漫谈二》</a>：这篇文章简单介绍了一个在编程中非常重要的思想或工具——状态机（State machine）。对大多数计算机专业的家伙们来说，这应该是一门比较难学的课程，里面包含一大堆揪心的名字比如DFA，NFA，还有一大堆各种各样的数学符号,又是编译原理的基础。不过很遗憾，似乎在做完编译原理课程作业之后，很多人再也没有实现过或是用过状态机了。本文通过一个游戏demo来简单描述一下状态机在实践中的应用。</p></li>
<li><p><a href="http://iiiyu.com/2014/10/20/iCloud-and-iCloud-Drive/">《iCloud 和 iCloud Drive》</a>：最近发现很多人对 iCloud 和 iCloud Drive 有些误解，而且还没有看见中文里面有一个比较正确的说法，本文详细讲解了 iCloud Drive 相关的知识。</p></li>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTg2NDA3MQ==&amp;mid=201175604&amp;idx=1&amp;sn=06882db86c9eacbc0cdca4df6dbdb67b#rd">《教你用KEYNOTE做出APP原型》</a>：WWDC 2014 Session Videos里有个视频Prototyping: Fake It Till You Make It ，在视频中，他们指导大家如何用Keynote做出逼真的交互原型。作者结合这个视频的截图，介绍了如何充分发挥Keynote的特点的做出逼真的交互原型。</p></li>
<li><p><a href="http://www.raywenderlich.com/82706/working-with-json-in-swift-tutorial">《Working with JSON in Swift Tutorial》</a>：文章介绍了在Swift中用原生方式处理JSON的不便之处，并详细介绍了开源库<code>SwiftyJSON</code>的使用。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/coolbeet/CBStoreHouseRefreshControl">CBStoreHouseRefreshControl</a>：一个效果很酷炫的下拉刷新控件。</p></li>
<li><p><a href="https://github.com/zhxnlai/ZLSwipeableView">ZLSwipeableView</a>：ZLSwipeableView是一个方便做出卡片效果的UI库，支持各种卡片的滑动效果。</p></li>
<li><p><a href="https://github.com/yuantiku/YTKNetwork">YTKNetwork</a>：YTKNetwork 是基于 AFNetworking 封装的 iOS 网络库，提供了更高层次的网络访问抽象。相比 AFNetworking，YTKNetwork 提供了以下更高级的功能：按时间或版本号缓存网络请求内容、检查返回 JSON 内容的合法性、文件的断点续传、批量的网络请求发送、filter和插件机制等。</p></li>
<li><p><a href="https://github.com/iMartinKiss/Objective-Chain">Objective-Chain</a>：Objective-Chain是一个面向对象的响应式框架，作者表示该框架吸收了 ReactiveCocoa 的思想，并且想做得更面向对象一些。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第29期]]></title>
    <link href="http://blog.devtang.com/blog/2014/10/30/ios-weekly-29/"/>
    <updated>2014-10-30T21:34:29+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/10/30/ios-weekly-29</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/10/apple-ios-app-support-64">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：苹果要求所有iOS新应用2015年2月起支持64位、怎样为iOS8应用制作预览视频、可视化开发 &ndash; IB的新时代等。</p>

<h2>新闻</h2>

<ol>
<li><a href="https://developer.apple.com/news/?id=10202014a">《苹果要求所有iOS新应用2015年2月起支持64位》</a>：苹果通过官方开发中心宣布，从2015年2月1日开始，所有上传至App Store官方商店的新iOS应用都必须支持64位。目前，支持64位的苹果设备包括iPhone 5S及以后的iPhone设备。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://beforweb.com/node/581">《终极指南 &ndash; 怎样为iOS8应用制作预览视频》</a>：说到App Store的改版，最值得设计师、开发者和市场人员关注的大概就是视频预览功能了。官方将其称为“应用预览(App Previews)”，如今已经正式出现在iOS8的App Store当中。自然，已经有一大波设计师和开发者为他们的产品制作了预览视频并通过iTunes Connect上传。坦率的说，如果你也有自己的产品，那么也该开始考虑做这件事了。本文介绍了为iOS8应用制作预览视频技巧和工具。</p></li>
<li><p><a href="http://onevcat.com/2014/10/ib-customize-view/">《WWDC 2014 Session笔记 &ndash; 可视化开发，IB 的新时代》</a>：文章介绍了 Xcode 6 中为 IB 锦上添花的一个特性，那就是实时地预览自定义 view，这个特性让 IB 开发的流程更加直观可视，也可以减少很多无聊的参数配置和 UI 设置的时间。</p></li>
<li><p><a href="http://www.cocoachina.com/swift/20141022/10008.html">《我在开发第一个Swift App过程中学到的四件事》</a>：本文作者Greg Heo，这是他为讲授iOS 8 App Extensions视频教程而实际使用Swift开发了一款App的经验，本是是他开发过程中的心得体验。</p></li>
<li><p><a href="http://imtx.me/archives/1913.html">《让你的 Mac App 支持 OS X Yosemite 的暗色菜单（Dark Menu）》</a>：文章介绍了如何让应用兼容 Yosemite 的暗色菜单。</p></li>
<li><p><a href="http://www.waerfa.com/sketch-skills-series-chapter-one">《玩转 Sketch 系列文章一：进入一个全新的时代》</a>：很多设计师都已经把主要的工作平台彻底迁移到了 Sketch。那么，是什么让他们放下了多年的 Photoshop，转身投入了 Sketch 的怀抱呢？理由很复杂，但用一句话表达：再也找不到比 Sketch 更顺手的设计软件了！对于那些还没有深入接触 Sketch 的同学，本文将是一个入门引导。虽然没有具体某一模块或功能的介绍，但文章从 Sketch 那上百种吸引人的特性中，选出几样与你分享，让你对它有一个大致的了解。</p></li>
<li><p><a href="http://www.raywenderlich.com/79764/custom-subscripting-swift-tutorial">《Custom Subscripting in Swift Tutorial》</a>：文章介绍了在Swift语言中使用自定义下标操作符。</p></li>
<li><p><a href="http://robbiepearce.com/devices">《Fully Scaleable Apple iOS Devices for Sketch》</a>：作者提供了用于设计的iOS设备Sketch资源。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/yuantiku/YTKKeyValueStore">YTKKeyValueStore</a>：YTKKeyValueStore是由笔者开源出来的一个基于sqlite的key-value存储工具。它被使用在了粉笔网、猿题库、小猿搜题三个客户端中后，我发现它不但完全能够满足大多数移动端开发的需求，而且非常适合移动端采用，所以开源出来。</p></li>
<li><p><a href="https://github.com/michaelarmstrong/SuperRecord">SuperRecord</a>：SuperRecord是一个方便在Swift语言中使用CoreData的库。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第28期]]></title>
    <link href="http://blog.devtang.com/blog/2014/10/22/ios-weekly-28/"/>
    <updated>2014-10-22T21:49:37+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/10/22/ios-weekly-28</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/10/apple-product-release-conference">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：苹果召开新品发布会、收据验证、Facebook开源AsyncDisplayKit等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://money.163.com/14/1017/10/A8OJTF7700254TI5.html">《苹果召开新品发布会》</a>：北京时间10月17日凌晨1点，苹果在美国加州库比蒂诺总部Infinite Loop园区的Town Hall大会堂如期召开了主题为“久违了（It’s been way too long）”的新品发布会。这也是继苹果iPhone6、iPhone 6 Plus正式发布后，苹果在今年秋季举办的第二场大型发布会。在此次发布会上，苹果正式发布了iPad Air 2、iPad mini 3；视网膜屏iMac；新款Mac mini；以及iOS8.1和Yosemite系统。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://blog.sunnyxx.com/2014/10/14/fp-essential/">《( ) &ndash;> ( )》</a>：<code>() -&gt; ()</code>不是什么表情符号，而是一种高度抽象的编程范式，它表示了一个函数式的编程思想，即值的变化过程。本文从swift语言入手分析，元组，函数，闭包等的设计对它进行解释，并阐释swift语言设计的大局观，最后分享一个Reactive Cocoa作者的Talk中的编程思想。</p></li>
<li><p><a href="http://objccn.io/issue-17-3/">《收据验证》</a>：收据 (Receipts) 是在 OS X 10.6.6 更新后，和 Mac App Store 一起出现的。 iOS 在内购的时候总是需要向服务器提供收据。验证收据的代码部分必须在安全方面高度敏感。如果被避开或者攻击，你就失去了核实用户权限的能力，并且无法验证用户是否购买。因此，让验证收据的代码能够承受黑客的攻击变得至关重要。本文讨论了如何安全地验证收据。</p></li>
<li><p><a href="http://robb.is/working-on/a-hamburger-button-transition/">《如何用Swift做一个不错的按钮变换动画》</a>：文章介绍了如何用Swift语言，采用<code>Core Graphics</code>来完成两个按钮之间的切换动画效果（效果图如下所示）。作者也将相关的代码开源在了<a href="https://github.com/robb/hamburger-button">这里</a>。</p></li>
</ol>


<p> <img src="http://robb.is/img/hamburger-button.gif" alt="" /></p>

<ol>
<li><p><a href="http://imtx.me/archives/1910.html">《适配 iOS 8 时遇到的问题两则：远程推送和 Unwind Segue》</a>：作者介绍了适配 iOS 8 时遇到的问题以及解决方案，值得大家参考。</p></li>
<li><p><a href="http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/">《为什么唱吧iOS 6.0选择了Mantle》</a>：唱吧6.0一个很重大的修改就是基于Mantle重建(新建)了Model层。文章分享了使用Mantle的决策及执行过程。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/facebook/AsyncDisplayKit">AsyncDisplayKit</a>：AsyncDisplayKit是facebook开源的一个框架，它能让复杂的用户交互效果流畅地显示，facebook使用它开发完成了paper。Facebook也在 <a href="https://code.facebook.com/posts/721586784561674/introducing-asyncdisplaykit-for-smooth-and-responsive-apps-on-ios/">这篇文章</a> 中，详细介绍了AsyncDisplayKit。</p></li>
<li><p><a href="https://github.com/krzysztofzablocki/KZBootstrap">KZBootstrap</a>：一个方便iOS工程初始化的项目，它包含一些推荐的工程设置和工具。</p></li>
<li><p><a href="https://github.com/chenqihui/NewsFourApp">NewsFourApp</a>：一个模仿网易4.0新UI框架的开源项目。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第27期]]></title>
    <link href="http://blog.devtang.com/blog/2014/10/12/ios-weekly-27/"/>
    <updated>2014-10-12T16:33:21+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/10/12/ios-weekly-27</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/10/ios6">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：国内iOS6比例已经低于5%，Apple 发布 Swift 语言和 Xcode 入门视频，Facebook&rsquo;s iOS Infrastructure等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://weibo.com/1708947107/BoBnZ1qy9?mod=weibotime#_rnd1412427404394">《国内iOS6比例已经低于5%》</a>：来自国内友盟的统计以及笔者开发的应用（猿题库）统计结果都显示，国内的iOS6用户比例已经低于5%。</p></li>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-09-27/10059651916.shtml">《苹果关闭iOS 7.1.2验证：iOS 8将无法降级》</a>：在发布iOS 8的两个更新之后，苹果停止了为iOS 7.1.2固件提供签名。这意味着，已经升级至新版iOS 8的用户将无法再降级回iOS 7.1.2。</p></li>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-10-04/08109666982.shtml">《新恶意软件iWorm已感染全球1.7万台Mac电脑》</a>：信息安全研究人员近期发现，全球超过1.7万台Mac电脑已经感染了一种名为“iWorm”的新的OS X恶意软件。这种恶意软件曾使用Reddit网站作为传播媒介，能窃取用户数据，触发多种系统操作，并执行Lua脚本。用户可以通过测试路径<code>/Library/Application Support/JavaW</code>是否存在，在判断是否中病毒。如果OS X找不到这一文件夹，那么Mac电脑就是安全的。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://swift-cheatsheet.co.uk/">《iOS8 Swift Cheat Sheet and Quick Reference Guide》</a>：这份速查表列出了Swift的常见的基本用法。</p></li>
<li><p><a href="http://bbs.iosre.com/forum.php?mod=viewthread&amp;tid=422">《 获取当前安装的所有App》</a>：作者介绍了利用私有API在非越狱的iOS 7和8机器上，获取iOS中安装的所有App的办法。</p></li>
<li><p><a href="http://weibo.com/p/23041889d963070102v39b">《iOS8企业应用部署Bug》</a>：作者发现使用iOS企业部署（In-HouseDistribution）方式进行应用升级时，在iOS8下无法成功，删除应用再重新安装也不行。经过调研，作者发现这个是Apple的bug，并且提供了临时解决办法。</p></li>
<li><p><a href="https://designcode.io/learn">《The best resources for learning iOS design and Xcode》</a>：作者整理了一系列关于iOS 设计和 Xcode 方面的学习资源，并提供邮件订阅。</p></li>
<li><p><a href="http://www.iwangke.me/2014/10/06/how-to-implement-a-core-animation-based-60-fps-ktv-lyrics-view/">《基于Core Animation的KTV歌词视图的平滑实现》</a>：文章介绍了唱吧歌词视图的技术实现细节。</p></li>
<li><p><a href="https://medium.com/swift-programming/15-swift-ios-open-source-projects-you-cannot-ignore-6bd4ac37d7dd">《10 Swift IOS open-source projects you cannot ignore》</a>：文章介绍了10大不能错过的 Swift 开源项目。</p></li>
<li><p><a href="http://www.appdesignvault.com/ios-8-custom-keyboard-extension/#a_aid=mdev">《iOS 8 Custom Keyboard Tutorial: How to Create A Third-Party Keyboard Extension》</a>：文章介绍了如何在iOS8下自定义键盘。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><p><a href="http://www.guomii.com/posts/39029">《Apple 发布 Swift 语言和 Xcode 入门视频》</a>：Apple 在 Swift 官方博客上发布了一段6分钟多的视频，介绍如何从零开始使用 Xcode 套件开发 iOS 应用，非常值得想现在开始学 iOS 开发的朋友一看。</p></li>
<li><p><a href="https://www.youtube.com/watch?v=XhXC4SKOGfQ">《Facebook&rsquo;s iOS Infrastructure》</a>：Facebook在视频中分享了他们的iOS端架构。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/SwiftP2P/SwiftSSL">SwiftSSL</a>：SwiftSSL 是一个基于CommonCrypto的Swift语言的加密库。</p></li>
<li><p><a href="https://github.com/daltoniam/SwiftHTTP">SwiftHTTP</a>：用Swift语言实现的HTTP网络库。</p></li>
<li><p><a href="https://github.com/stephencelis/SQLite.swift">SQLite.swift</a>：SQLite.swift是一个将SQLite3封装成Swift语言的包装库。</p></li>
<li><p><a href="https://github.com/Brimizer/Slidden">Slidden</a>: Slidden是一个老外开源的开发自定义键盘的库，利用这个开源库，可以方便的配置键位、颜色以及键位对应的图片。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第26期]]></title>
    <link href="http://blog.devtang.com/blog/2014/09/24/ios-weekly-26/"/>
    <updated>2014-09-24T20:49:02+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/09/24/ios-weekly-26</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/09/swift-strong-point">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：Swift 的强大之处、iOS8开发者专题、在Xcode 6中使用矢量PDF、iOS 8 App Extensions等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://www.guomii.com/posts/38832">《Apple 上线 Android 到 iPhone 数据迁移教程》</a>：为了让更多的 Android 用户加入到 iPhone 阵营，Apple 主动出击，上线了一个<a href="http://support.apple.com/kb/HT6407">专门的页面</a>，帮助 Android 用户购买 iPhone 之后迁移数据。涉及到的内容包括邮件、通讯录、日历、照片、视频、音乐、电子书、PDF、文档、应用等的迁移。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://objccn.io/issue-16-1/">《Swift 的强大之处》</a>：介绍了Swift语言的特性，包括支持函数式编程、类型安全、不可变性等。</p></li>
<li><p><a href="http://objccn.io/issue-16-4/">《Swift 的函数式 API》</a>：Swift 引入了泛型和函数式编程的思想，极大地扩展了设计的空间。文章借对 Core Image 进行函数式 API 封装为例，展示出应用 Swift 进行函数式编程的能力。</p></li>
<li><p><a href="http://www.cocoachina.com/special/ios8/">《iOS8开发者专题》</a>：由CocoaChina整理出来的iOS8相关的资料汇总。</p></li>
<li><p><a href="http://blog.callmewhy.com/2014/09/15/todo-list-in-swift/">《用 Swift 开发一个 TODO 应用》</a>：作者 <a href="http://weibo.com/small1030light">@请叫我汪二</a> 在文章中教你如何完成一个 TODO 的应用，功能包括添加任务和浏览任务。适合有一定 Objective-C 的开发基础但是还没怎么接触 Swift 的 iOS 开发者，希望通过这样一个简单的例子可以和大家一起熟悉一下 Swift。</p></li>
<li><p><a href="http://blog.sunnyxx.com/2014/09/15/objc-attribute-cleanup/">《黑魔法<strong>attribute</strong>((cleanup))》</a>：编译器属性 <code>__attribute__</code>用于向编译器描述特殊的标识、检查或优化。作者在文章中介绍了其中一个名为<code>cleanup</code>的“黑魔法”属性。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/swiftzhong-lei-de-chu-shi-hua-qi-yu-ji-cheng">《Swift中类的初始化器与继承》</a>：Swift 为类定义了两种初始化器来确保类中所有的储存属性都能得到一个初始化值。这两种初始化器就是「指定初始化器」(Designated Initializer)与「便利初始化器」(Convenience Initializer)，文章对其做了介绍。</p></li>
<li><p><a href="http://blog.ibireme.com/2014/09/16/adapted_to_iphone6/">《大屏iPhone的适配》</a>：自从苹果出了大屏iPhone后，iOS开发也要做适配了， 这里大概总结下这几天了解到的大屏适配的注意事项。</p></li>
<li><p><a href="http://martiancraft.com/blog/2014/09/vector-images-xcode6/">《Using Vector Images in Xcode 6》</a>：文章介绍了在Xcode 6中使用矢量PDF图形的具体操作方法。</p></li>
<li><p><a href="http://radex.io/swift/methods/">《Swifty methods》</a>：文章讨论了Swift的函数命名习惯，并与Objective-C语言做了对比。</p></li>
<li><p><a href="https://developer.apple.com/apple-pay/Apple-Pay-Human-Interface-Guidelines.pdf">《Apple Pay Human Interface Guidelines》</a>：苹果发布了支付功能Apple Pay的人机交互指南。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://www.raywenderlich.com/83021/ios-8-app-extensions-tech-talk-video">《iOS 8 App Extensions Tech Talk Video》</a>：该视频介绍了iOS 8引入的App Extensions功能。从用户视角和开发者视角分别对其做了介绍。</li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="http://www.wuwacorp.com/specking/">specKing</a>：specKing 与 <a href="http://www.getmarkman.com/">马克鳗</a> 功能类似，用于全自动标示美术稿。不过 specKing 是以付费的 PS 外挂的形式发布的。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><a href="https://github.com/shu223/iOS8-Sampler">iOS8-Sampler</a>：日本的shuさん制作的 iOS8 参考代码集。由 <a href="http://weibo.com/u/2289288323">@kimsungwhee</a> 推荐。</li>
</ol>

]]></content>
  </entry>
  
</feed>
