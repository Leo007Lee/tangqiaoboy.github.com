<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: weekly | 唐巧的技术博客]]></title>
  <link href="http://blog.devtang.com/blog/categories/weekly/atom.xml" rel="self"/>
  <link href="http://blog.devtang.com/"/>
  <updated>2014-12-21T19:58:32+08:00</updated>
  <id>http://blog.devtang.com/</id>
  <author>
    <name><![CDATA[唐巧]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第34期]]></title>
    <link href="http://blog.devtang.com/blog/2014/12/21/ios-weekly-34/"/>
    <updated>2014-12-21T19:56:06+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/12/21/ios-weekly-34</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/12/ios-code-android-app">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：浅谈 iOS 版本号、UIScrollView 实践经验、设计优雅的移动游戏、如何把iOS代码编译为Android应用等。</p>

<h2>新闻</h2>

<ol>
<li><a href="http://tech.sina.com.cn/mobile/n/n/2014-12-12/doc-iavxeafr6871711.shtml">《iPhone 6/6 Plus中国销量曝光：单月销量650万》</a>：据iSuppli Corp.中国研究总监王阳爆料，iPhone 6和iPhone 6 Plus在国内受欢迎的情况大大超过预期，苹果在中国的单月销量在11月超过了650万台，全年在中国的销量将超过4000万台。</li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://vombat.tumblr.com/post/60530544401/date-parsing-performance-on-ios-nsdateformatter">《 Date parsing performance on iOS》</a>：文章介绍了一个关于格式化时间的”黑科技“，作者使用 sqlite 替换 NSDateFormatter，提高了16倍的转换效率。</p></li>
<li><p><a href="http://club.fir.im/topic/548c09a1f6de25850440afd7">《浅谈 iOS 版本号》</a>：FIR.im 一直在尽量兼容不同使用习惯的版本号形式, 但是在使用中我们发现好多开发者对怎么更好的用版本号来标示应用很陌生。这是篇基础文章，简单介绍 iOS 的版本号。</p></li>
<li><p><a href="http://tech.glowing.com/cn/practice-in-uiscrollview/">《UIScrollView 实践经验》</a>：UIScrollView（包括它的子类 UITableView 和 UICollectionView）是 iOS 开发中最常用也是最有意思的 UI 组件，大部分 App 的核心界面都是基于三者之一或三者的组合实现。UIScrollView 是 UIKit 中为数不多能响应滑动手势的 view，相比自己用 UIPanGestureRecognizer 实现一些基于滑动手势的效果，用 UIScrollView 的优势在于 bounce 和 decelerate 等特性可以让 App 的用户体验与 iOS 系统的用户体验保持一致。本文通过一些实例讲解 UIScrollView 的特性和实际使用中的经验。</p></li>
<li><p><a href="http://objccn.io/issue-18-1/">《设计优雅的移动游戏》</a>：设计手机游戏是一个有趣的主意，理论上，做智能手机或者平板电脑游戏与其他平台游戏设计没有根本的不同。手机游戏在传统系统属性上与其他类型以及平台极其相似，无论你想创造一个开心农场，使命召唤还是国际象棋。但实践中，想要创建一个成功的手机游戏完全是另一回事。有很多其他的顾虑，从市场饱和及难以被发现，到玩法定型及设备的尺寸因素等。由于这些原因，作为一个设计师来说创造一个优秀的手机游戏就像在玩“困难模式”。文章介绍了手机游戏的两个特征：游戏时长和交互方法，另外介绍了几种适用于移动平台的系统设计方法。本文译者：<a href="http://diwu.me">@唯木念</a>。</p></li>
<li><p><a href="http://objccn.io/issue-18-2/">《Metal》</a>：Metal 是针对 iPhone 和 iPad 中 GPU 编程的高度优化的框架。其名字来源是因为 Metal 是 iOS 平台中最底层的图形框架 (意指 &ldquo;最接近硬件&rdquo;)。该框架被设计用来实现两个目标: 3D 图形渲染和并行计算。这两者有很多共同点。它们都在数量庞大的数据上并行运行特殊的代码，并可以在 GPU 上执行。本文介绍了 Metal 的好处以及使用基础。本文译者：migrant。</p></li>
<li><p><a href="http://objccn.io/issue-18-3/">《Scene Kit》</a>：在 WWDC 2012，Apple 向 OS X 开发者们介绍了 Scene Kit，这个 Cocoa 下的 3D 渲染框架。在第一版通用 3D 渲染器发布后，一年内又陆续增加了像 shader (着色器) 修改器、节点约束、骨骼动画等几个强大的特性 (随 Mavericks 发布)。今年，Scene Kit 变的更加强大，支持了粒子效果、物理引擎、脚本事件以及多通道分层渲染等多种技术，而且，对于很多人来说更关键的是，它终于可以在 iOS 中使用了。本文介绍了Scene Kit的概要知识，以及如何使用它来写游戏。本文译者：<a href="http://blog.sunnyxx.com">孙源</a>。</p></li>
<li><p><a href="http://objccn.io/issue-18-4/">《游戏中的多点互联》</a>：多点互联是苹果的一个传输无关的网络框架，提供网络的发现、创建和通信功能。MPC 的关键用途在于创建临时网络中的点对点连接，而不需要考虑天气、无线、蓝牙等各种因素，只需要有个人网络就行。一旦创建之后，各个节点可以安全地共享消息、数据和文件资源。大部分的游戏都更适合用 GameKit 开发，它有很多直接使用 MPC 实现的游戏相关的封装。不过作为 MPC 的进阶手册，本文主要涉及 MPC 的各种使用技巧。本文译者：<a href="http://blog.callmewhy.com">汪海洋</a>。</p></li>
<li><p><a href="http://objccn.io/issue-18-5/">《虚拟音域 &ndash; 声音设计的艺术》</a>：由于声音占据我们日常生活的很大部分，所以声音在游戏开发中也越来越重要。然而，要实现完全身临其境的虚拟现实，最大的挑战之一就是设计逼真的声音环境。如果你身处一个虚拟森林中，但却听不到树叶的沙沙声，也听不到昆虫的鸣叫声，你就不会感觉到真实。在某些方面，音效设计是吃力不讨好的活计。你什么都正确的话，没人会注意到这些，但是一旦你做错了什么，人们百分之百会注意到。这是一项痛苦，细节导向，但又几乎被忽略的工作。但是，当你捕捉到一种美妙的声音体验或真实的声音环境时，你会感觉到一种乐趣，这种乐趣很大程度上弥补了工作辛苦、收获甚少的不足。本文介绍了音效各方面的知识，包括：记录声音、麦克风、数码音频软件、拟音、音频滤波器、混合音效等知识。本文译者：<a href="http://blog.sina.com.cn/u/1867019351">树叶</a></p></li>
<li><p><a href="http://madebymany.com/blog/continuous-integration-for-ios-development">《Continuous Integration for iOS Development》</a>：文章介绍了如何基于Xcode的Bot做持续集成。</p></li>
<li><p><a href="http://nshipster.com/nsundomanager/">《NSUndo​Manager》</a>：本文介绍了 NSUndoManager 的使用。NSUndoManager 可以用来做一些撤销操作。</p></li>
<li><p><a href="http://www.jianshu.com/p/6313025349a9">《视频特效制作》</a>：文章介绍了一些视频特效制作方法，包括给视频添加边框、给视频添加水印、给视频添加动画、做出3D效果、视频推进效果等技术细节。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://boolan.com/lecture/1000001076#0-tsina-1-39436-397232819ff9a47a7b7e80a40613cfe1">《如何把iOS代码编译为Android应用》</a>：OurCoders.com站长 <a href="http://www.weibo.com/tinyfool?from=feed&amp;loc=nickname">@tinyfool</a>介绍了他们通过将Objective-C底层移植到Android平台，最终把iOS代码编译为Android应用的过程。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/mutualmobile/MMWormhole">MMWormhole</a>：MMWormhole 是一个方便开发者在 iOS 应用与 iOS extensions 之间交换数据的开源框架。</p></li>
<li><p><a href="https://github.com/rickytan/RTImageAssets">RTImageAssets</a>：RTImageAssets 是一个 Xcode 插件，用来生成 @3x 的图片资源对应的 @2x 和 @1x 版本，只要拖拽高清图到 @3x 的位置上，然后按 <code>Ctrl+Shift+A</code> 即可自动生成两张低清的补全空位。当然，如果你对图片质量要求不高的话，你也可以从 @2x 的图生成 @3x 版本。</p></li>
<li><p><a href="https://github.com/poolqf/PQFCustomLoaders">PQFCustomLoaders</a>：PQFCustomLoaders 提供了高质量的、定制化的加载进度条。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第33期]]></title>
    <link href="http://blog.devtang.com/blog/2014/12/01/ios-weekly-33/"/>
    <updated>2014-12-01T21:31:30+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/12/01/ios-weekly-33</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/12/google-inbox-reuse-code">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：Google Inbox 是如何跨平台重用代码的、iOS8.1.1系统被越狱、SizeClass 和AutoLayout教程等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://tech.sina.com.cn/it/apple/2014-11-29/05179836762.shtml">《乔布斯去世后仍获141项专利》</a>：据《麻省理工技术评论》称，尽管苹果公司联合创始人史蒂夫·乔布斯过世已三年有余，但直到今天仍陆续有新的专利归于他名下。截至目前已被授予乔布斯的专利总数共有458项。</p></li>
<li><p><a href="http://tech.sina.com.cn/t/2014-11-27/doc-iavxeafr5326713.shtml">《iPhone 6在俄售价提高25%》</a>：近日16G版iPhone 6在俄罗斯官网上的售价提高了25%，从31990卢布提价至39990卢布(约5215元人民币)。此前，俄罗斯的iPhone 6售价是全欧洲最低，因此经常有特地去俄罗斯购买iPhone 6的游客。</p></li>
<li><p><a href="http://tech.sina.com.cn/t/2014-11-30/doc-icczmvun0757922.shtml">《iOS8.1.1系统被越狱》</a>：某团队正式对外发布了iOS 8.1.1完美越狱工具，支持 iOS 8.1.1 版本。</p></li>
<li><p><a href="http://coolshell.cn/articles/12136.html">《Google Inbox 是如何跨平台重用代码的？》</a>：开发一个移动应用在当下并不是一件容易的事情。如果想要获得最多的用户，你的应用通常需要覆盖 iOS, Android, 和 Web 三大平台。这就意味着同一个应用需要开发三个版本，使用 Objective-C 或者 Swift 开发 iOS 版本，使用 Java 开发 Android 版本，使用 JavaScript/CSS/HTML5 开发 Web 版本。工作量增大的同时也意味着有更多的 bug 需要修复。本文介绍了 Google 在发布 Google Inbox 时，使用 J2Objc 实现了70%的代码跨平台复用。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://limboy.me/ios/2014/11/28/facebook-app-headers.html">《读 Facebook App 头文件的一些收获》</a>：最近在看一些 App 架构相关的文章，也看了 Facebook 分享的两个不同时期的架构（2013 和 2014），于是就想一窥 Facebook App 的头文件，看看会不会有更多的收获，确实有，还不少。作者分享了从头文件中获取到的一些信息。</p></li>
<li><p><a href="http://www.jianshu.com/p/3d6b2341fd83">《SizeClass 和AutoLayout教程3》</a>：文章翻译自《iOS8 by tutorials》的第一章，以开发一个天气应用为例子，介绍了SizeClass 和AutoLayout相关知识。译者：@<a href="http://weibo.com/1438670852/profile?topnav=1&amp;wvr=6">叶孤城___</a>。</p></li>
<li><p><a href="http://www.jianshu.com/p/e72e957497b3">《SizeClasss和AutoLayout教程4》</a>：文章翻译自《iOS8 by tutorials》的第一章，介绍了如何在不同的 SizeClass 给同一个label设定不同的字体大小和样式。译者：@<a href="http://weibo.com/1438670852/profile?topnav=1&amp;wvr=6">叶孤城___</a>。</p></li>
<li><p><a href="http://www.jianshu.com/p/85148630ec9c">《如何做出炫酷的卡片动画1》</a>：作者介绍了有关卡片动画的研究和实现。</p></li>
<li><p><a href="http://chun.tips/blog/2014/11/19/zou-jin-watchkit-framework/">《走进 WatchKit Framework》</a>：作者整理了关于 WatchKit Framework API的知识点。</p></li>
<li><p><a href="http://chun.tips/blog/2014/11/28/core-data-ban-ben-qian-yi-jing-yan-zong-jie/">《Core Data 版本迁移经验总结》</a>：大家在学习和使用Core Data过程中，第一次进行版本迁移的经历一定是记忆犹新，至少我是这样的，XD。弄的不好，就会搞出一些由于迁移过程中数据模型出错导致的Crash。作者在本文中总结了一下Core Data版本迁移过程中的经验。</p></li>
<li><p><a href="http://www.raywenderlich.com/85080/beginning-alamofire-tutorial">《Beginning Alamofire Tutorial》</a>：Alamofire 是 AFNetworking 的作者 Mattt Thompson，用 Swift 实现的网络基础库。本文介绍了其基本的使用方法。</p></li>
</ol>


<h2>视频</h2>

<ol>
<li><a href="http://www.imooc.com/view/242">《一起来做价值百万的Apple Watch App：分歧终端机》</a>：视频展示了如何使用WatchKit，如何通过MVC的绑定来处理用户事件，如何制作动画的功能。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/victorjiang/MobileDataSwitch">MobileDataSwitch</a>：MobileDataSwitch 使用 CoreTelephony 中的私有接口，切换移动网络开关。作者还添加了App Extensions支持，可以在下拉通知 Today 中增加快速设置开关。</p></li>
<li><p><a href="https://github.com/tapwork/HeapInspector-for-iOS">HeapInspector</a>：HeapInspector是一个用于检测应用中的内存泄漏的开源调试工具。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第32期]]></title>
    <link href="http://blog.devtang.com/blog/2014/11/24/ios-weekly-32/"/>
    <updated>2014-11-24T21:42:41+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/11/24/ios-weekly-32</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/11/1yuan-apple-app-store-pricing">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：“1元”正式成苹果中国区应用商店新定价、Apple Watch人机界面指南、Apple WatchKit 初探等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://tech.sina.com.cn/it/apple/2014-11-18/06419801088.shtml">《苹果公司发布iOS 8.1.1升级补丁》</a>：11月18日凌晨消息，苹果公司已对上个月针对iPhone、iPad和iPod Touch发布的iOS 8.1操作系统正式推出了iOS 8.1.1升级补丁。iOS 8.1.1将可改善基于iOS 8系统运行的、使用A5芯片的较老设备的表现，也就是指iPad 2和iPhone 4s。除了发布iOS 8.1.1以外，苹果公司还发布了OS X 10.10.1升级补丁以修复WiFi网络表现及其他问题。</p></li>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-11-21/16439814574.shtml">《“1元”正式成苹果中国区应用商店新定价》</a>：11月19日，苹果中国区App Store应用商店出现1元应用，当时曾有消息称这是短期促销行为，不过目前苹果公司已经正式宣布，人民币1元及3元将是中国区应用商店的新定价，作为一个永久价格选项。</p></li>
<li><p><a href="https://github.com/CocoaPods/CocoaPods/pull/2835">《CocoaPods将要支持Swift》</a>：从 CocoaPods 的一个pull request中，我们了解到著名的 iOS 依赖管理工具 CocoaPods 将要支持 Swift 语言。</p></li>
<li><p><a href="http://it.sohu.com/20141121/n406233892.shtml">《AppleWatch需求被低估 苹果股价创历史新高》</a>：11月21日，据外国媒体报道，在经过新一轮的多名华尔街分析师上调公司目标股价之后，再加上摩根士丹利认为一些投资者低估了苹果智能手表Apple Watch的市场需求预期，苹果周四股价呈现出上涨局面。苹果股价在当周曾达到历史新高的117.28美元。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://vdisk.weibo.com/s/yWUvUXSZiJFiv">《Apple Watch人机界面指南（中文版）》</a>：苹果于11月19号放出了Apple Watch的官方设计指南。这是由<a href="http://weibo.com/uiteam?from=feed&amp;loc=nickname">微博无线设计团队</a>翻译的中文版指南。</p></li>
<li><p><a href="https://github.com/nixzhu/dev-blog/blob/master/2014-11-20-build-custom-control-in-swift.md">《使用 Swift 构建自定义（且“可设计”的）控件》</a>：大约两年前，我写了一篇关于在 iOS 上构件自定义控件的教程。那篇教程获得了社区的高度赞赏，所以我决定将其用 Swift 更新并加入 Designable/Inspectable 属性以支持直接在 Interface Builder 里调整控件的外观。</p></li>
<li><p><a href="http://onevcat.com/2014/11/watch-kit/">《Apple WatchKit 初探》</a>： 11月19日，Apple 发布了第一版的 Watch Kit 的 API，对于开发者来说，这款新设备的一些更详细的信息也算是逐渐浮出水面。可以说第一版的 WatchKit 开放的功能总体还是令人满意的。Apple 在承诺逐渐开放的方向上继续前进。本文介绍了Watch app 架构和主要的类等相关知识。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/webkit-zhi-shu-ju-gong-xiang">《WatchKit 之 数据共享》</a>：本文介绍了如何使 Watch App 与 iOS App 之间进行数据共享。</p></li>
<li><p><a href="http://nonomori.farbox.com/post/watchkit-zhi-dao-hang">《WatchKit 之 导航》</a>：在 Watch App 中，当涉及到多个界面跳转时，我们共有两种导航方式可使用：<code>Hierarchical</code> 与 <code>Page-based</code>。本文将对这两种导航方式以及 Modal 展现方式做简单的介绍。</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><a href="https://github.com/lucholaf/Auto-Importer-for-Xcode">Auto-Importer</a>：Auto-Importer是一个自动导入类对应的头文件的Xcode插件。</li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/Carthage/Carthage">Carthage</a>：Carthage是一个去中心化的依赖管理工具。</p></li>
<li><p><a href="https://github.com/coteditor/CotEditor">CotEditor</a>：CotEditor是一个OS X下的开源的纯文本编辑器。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第31期]]></title>
    <link href="http://blog.devtang.com/blog/2014/11/19/ios-weekly-31/"/>
    <updated>2014-11-19T22:09:57+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/11/19/ios-weekly-31</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/11/objective-c-runtime">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：黑幕背后的__block修饰符、刨根问底Objective－C Runtime、Flashlight等。</p>

<h2>新闻</h2>

<ol>
<li><p><a href="http://tech.sina.com.cn/mobile/n/apple/2014-11-14/21329792202.shtml">《三名iOS系统恶意程序制作者被抓获》</a>：11月14日据首都网警微博报道，北京市公安局将iOS系统恶意程序的三名制作者抓获，涉案网站被关停。11月初，有研究人员在iOS系统中发现了一个名为Wirelurker的漏洞，可以让iPhone在不越狱的情况下感染病毒，并且有可能已经影响了数十万用户。</p></li>
<li><p><a href="http://www.tuicool.com/articles/zIFbQ3r">《第三方SSD的电脑升级Yosemite需要关闭kext signing》</a>：苹果在本次升级里为 Yosemite 增加了一个新型的安全插件“kext signing”，存储在 NVRAM/PRAM 里，未经苹果认证的第三方 SSD 硬盘都将被这个插件过滤掉，所以会有用户在升级后开机遇到灰叉的情况，这时你可以使用最新版的Trim Enabler 3.3 ，升级前可提前关闭“kext signing”。</p></li>
</ol>


<h2>教程</h2>

<ol>
<li><p><a href="http://chun.tips/blog/2014/11/13/hei-mu-bei-hou-de-blockxiu-shi-fu/">《黑幕背后的__block修饰符》</a>：文章通过使用 <code>clang -rewrite-objc</code> 命令，分析了 <code>__block</code> 修饰符是如何做到改变引用的变量的值。</p></li>
<li><p><a href="http://t.cn/R7meOzE">《刨根问底Objective－C Runtime（3）－ 消息 和 Category》</a>：文章通过一道习题，利用分析Objective-C实现源代码，讲解了Objective-C的消息和Category的实现原理。</p></li>
<li><p><a href="http://t.cn/R7melvT">《刨根问底Objective－C Runtime（4）－ 成员变量与属性》</a>：本篇笔记主要是讲述Objective－C Runtime的成员变量和属性。</p></li>
<li><p><a href="http://nshipster.cn/uialertcontroller/">《UIAlert​Controller》</a>：你知道 UIAlertView、UIActionSheet (以及它们各自的 delegate protocols) 在 iOS 8 中已经被废弃了吗？本文章的主题就是 UIAlertController，向大家展示如何替换旧的 alert，以及这些操作方法的高级扩展。</p></li>
<li><p><a href="http://nshipster.cn/swift-comparison-protocols/">《Swift Comparison Protocols》</a>：Objective-C 让我们对相等性和唯一性的本质慢慢有了带有哲学色彩的思考。为了解救那些不愿意向论文一样的哲理卑身屈膝的开发者，Swift 为此作出了很多改进。在 Swift 中，Equatable 是一个基本类型，由此也演变出了 Comparable 和 Hashable 两种类型。这三个一起组成了这门语言关于对象比较的核心元素。本文介绍了 Swift 中的比较功能。</p></li>
<li><p><a href="http://nshipster.cn/wkwebkit/">《WKWeb​View》</a>：WKWebView 是现代 WebKit API 在 iOS 8 和 OS X Yosemite 应用中的核心部分。它代替了 UIKit 中的 UIWebView 和 AppKit 中的 WebView，提供了统一的跨双平台 API。本文比较了 WKWebView 与 UIWebView 的功能。</p></li>
</ol>


<h2>工具</h2>

<ol>
<li><p><a href="https://github.com/nate-parrott/Flashlight">Flashlight</a>：Flashlight 是为 Spotlight 写插件的非官方框架。</p></li>
<li><p><a href="https://github.com/allenhsu/FlashlightPlugins">FlashlightPlugins</a>：FlashlightPlugins 基于 Flashlight 的中文插件列表。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS移动开发周报-第30期]]></title>
    <link href="http://blog.devtang.com/blog/2014/11/15/ios-weekly-30/"/>
    <updated>2014-11-15T08:38:00+08:00</updated>
    <id>http://blog.devtang.com/blog/2014/11/15/ios-weekly-30</id>
    <content type="html"><![CDATA[<h3>版权说明</h3>

<p>本文为InfoQ中文站特供稿件，首发地址为：<a href="http://www.infoq.com/cn/news/2014/11/masonry-introduction-practise">文章链接</a>。如需转载，请与InfoQ中文站联系。</p>

<h3>前言</h3>

<p>欢迎国内的iOS同行或技术作者向我提交周报线索，线索可以是新闻、教程、开发工具或开源项目，将相关文章的简介和链接在微博上发布并 <a href="http://weibo.com/tangqiaoboy">@唐巧_boy</a> 即可。</p>

<p>【摘要】：本期iOS移动开发周报带来如下内容：Masonry介绍与使用实践、Objective-C Runtime、iOS APP 架构漫谈、教你用KEYNOTE做出APP原型等。</p>

<h2>教程</h2>

<ol>
<li><p><a href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/">《Masonry介绍与使用实践(快速上手Autolayout)》</a>：iPhone6发布之后，我知道使用autolayout势在必行了，这时想起了以前在浏览Github看到过的一个第三方库Masonry。在花了几个小时的研究使用后，我就将autolayout掌握了(重点是我并没有学习任何的官方文档或者其他的关于autolayout的知识)，这就是我为什么要写下这篇文章来推荐它的原因。Masonry是一个轻量级的布局框架，拥有自己的描述语法，采用更优雅的链式语法封装自动布局，简洁明了并具有高可读性。</p></li>
<li><p><a href="http://yulingtianxia.com/blog/2014/11/05/objective-c-runtime/">《Objective-C Runtime》</a>：因为OC是一门动态语言，所以它总是想办法把一些决定工作从编译连接推迟到运行时。也就是说只有编译器是不够的，还需要一个运行时系统 (runtime system) 来执行编译后的代码。这就是 Objective-C Runtime 系统存在的意义，它是整个OC运行框架的一块基石。本文详细整理了 Cocoa 的 Runtime 系统的知识，它使得 Objective-C 如虎添翼，具备了灵活的动态特性，使这门古老的语言焕发生机。主要内容包括：与Runtime交互、Runtime术语、消息机制、动态方法解析、消息转发、壮的实例变量(Non Fragile ivars)、Objective-C Associated Objects。</p></li>
<li><p><a href="http://t.cn/R7HYfhz">《刨根问底Objective－C Runtime（1）－ Self &amp; Super》</a>：本文通过分析clang重写的Objective-C源码，从而解释Objective-C中的self和super在编译器层面分别是如何处理的。</p></li>
<li><p><a href="http://t.cn/R7QUSUE">《刨根问底Objective－C Runtime（2）－ Object &amp; Class &amp; Meta Class》</a>：本文主要讲述objc runtime中关于Object &amp; Class &amp; Meta Class的细节。</p></li>
<li><p><a href="http://studentdeng.github.io/blog/2014/11/05/ios-architecture2/">《iOS APP 架构漫谈二》</a>：这篇文章简单介绍了一个在编程中非常重要的思想或工具——状态机（State machine）。对大多数计算机专业的家伙们来说，这应该是一门比较难学的课程，里面包含一大堆揪心的名字比如DFA，NFA，还有一大堆各种各样的数学符号,又是编译原理的基础。不过很遗憾，似乎在做完编译原理课程作业之后，很多人再也没有实现过或是用过状态机了。本文通过一个游戏demo来简单描述一下状态机在实践中的应用。</p></li>
<li><p><a href="http://iiiyu.com/2014/10/20/iCloud-and-iCloud-Drive/">《iCloud 和 iCloud Drive》</a>：最近发现很多人对 iCloud 和 iCloud Drive 有些误解，而且还没有看见中文里面有一个比较正确的说法，本文详细讲解了 iCloud Drive 相关的知识。</p></li>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTg2NDA3MQ==&amp;mid=201175604&amp;idx=1&amp;sn=06882db86c9eacbc0cdca4df6dbdb67b#rd">《教你用KEYNOTE做出APP原型》</a>：WWDC 2014 Session Videos里有个视频Prototyping: Fake It Till You Make It ，在视频中，他们指导大家如何用Keynote做出逼真的交互原型。作者结合这个视频的截图，介绍了如何充分发挥Keynote的特点的做出逼真的交互原型。</p></li>
<li><p><a href="http://www.raywenderlich.com/82706/working-with-json-in-swift-tutorial">《Working with JSON in Swift Tutorial》</a>：文章介绍了在Swift中用原生方式处理JSON的不便之处，并详细介绍了开源库<code>SwiftyJSON</code>的使用。</p></li>
</ol>


<h2>开源项目</h2>

<ol>
<li><p><a href="https://github.com/coolbeet/CBStoreHouseRefreshControl">CBStoreHouseRefreshControl</a>：一个效果很酷炫的下拉刷新控件。</p></li>
<li><p><a href="https://github.com/zhxnlai/ZLSwipeableView">ZLSwipeableView</a>：ZLSwipeableView是一个方便做出卡片效果的UI库，支持各种卡片的滑动效果。</p></li>
<li><p><a href="https://github.com/yuantiku/YTKNetwork">YTKNetwork</a>：YTKNetwork 是基于 AFNetworking 封装的 iOS 网络库，提供了更高层次的网络访问抽象。相比 AFNetworking，YTKNetwork 提供了以下更高级的功能：按时间或版本号缓存网络请求内容、检查返回 JSON 内容的合法性、文件的断点续传、批量的网络请求发送、filter和插件机制等。</p></li>
<li><p><a href="https://github.com/iMartinKiss/Objective-Chain">Objective-Chain</a>：Objective-Chain是一个面向对象的响应式框架，作者表示该框架吸收了 ReactiveCocoa 的思想，并且想做得更面向对象一些。</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
